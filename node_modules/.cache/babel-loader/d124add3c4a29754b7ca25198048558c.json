{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/RecipeProgress/RecipeToProgress.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // import YouTube from 'react-youtube';\n\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport Context from '../../Context'; // import Recommendation from '../Recommendation';\n\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\"; // const getYouTubeVideoId = (url) => {\n//   if (!url) return 'MAiyzmLhIEw';\n//   const start = url.split('').findIndex((char) => char === '=');\n//   const videoId = url.slice(start + 1);\n//   return videoId;\n// };\n\nconst RecipeToProgress = ({\n  recipe,\n  commonProps\n}) => {\n  const navigate = useHistory();\n  const {\n    handleClickStartRecipe,\n    handleClickFavorite\n  } = useContext(Context);\n  const btnvalue = 'Finalizar Receita';\n  const [copied, setCopied] = useState(false);\n  const [check, setCheck] = useState(false);\n  const {\n    page,\n    favorite,\n    ingredients,\n    measures,\n    inProgress,\n    meals,\n    drinks,\n    id\n  } = commonProps;\n  const pathFood = `http://localhost:3000/comidas/${id}`;\n  const pathDrink = `http://localhost:3000/bebidas/${id}`;\n\n  const handleClickShare = path => {\n    // console.log(path);\n    copy(path).then(() => setCopied(true)).catch(err => console.log(err));\n  };\n\n  const streakIngredient = (key, event) => {\n    console.log(key, event);\n    const {\n      target\n    } = event;\n    const element = document.getElementById(key);\n\n    if (target.checked === false && element.style.textDecoration !== 'line-through') {\n      setCheck(true);\n      element.style.textDecoration = 'line-through';\n    }\n\n    if (target.checked === true && element.style.textDecoration === 'line-through') {\n      setCheck(true);\n      element.style.textDecoration = '';\n    }\n  };\n\n  if (page === 'meal') {\n    const {\n      strMealThumb,\n      strMeal,\n      strCategory,\n      strInstructions,\n      strYoutube\n    } = recipe;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: strMealThumb,\n      width: \"150\",\n      alt: \"meal\",\n      \"data-testid\": \"recipe-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, strMeal), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, strCategory), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"share-btn\" // value={ pathFood }\n      ,\n      onClick: () => handleClickShare(pathFood),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"share icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => handleClickFavorite(recipe, page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: favorite ? blackHeartIcon : whiteHeartIcon,\n      alt: \"favorite icon\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }))), copied && 'Link copiado!', /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"div\", {\n      // onChange={ () => streakIngredient(ing) }\n      \"data-testid\": `${index}-ingredient-step`,\n      key: `${ing}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: () => streakIngredient(`${ing}-${index}`),\n      \"data-testid\": \"ingredient-search-radio\",\n      type: \"checkbox\",\n      value: ing,\n      name: ing // checked={ disabled }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), ' ', /*#__PURE__*/React.createElement(\"p\", {\n      id: `${ing}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, ing)))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"start-button\",\n      type: \"button\",\n      \"data-testid\": \"finish-recipe-btn\",\n      onClick: () => {\n        handleClickStartRecipe(id, ingredients, page);\n        navigate.push('/bebidas/receitas-feitas');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, inProgress ? btnvalue : btnvalue));\n  }\n\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic\n  } = recipe;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    width: \"150\",\n    alt: \"meal\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, strAlcoholic === 'Alcoholic' ? 'Alcoholic' : strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\" // value={ pathDrink }\n    ,\n    onClick: () => handleClickShare(pathDrink),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"share icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleClickFavorite(recipe, page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: favorite ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favorite icon\",\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }))), copied && 'Link copiado!', /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"div\", {\n    // onChange={ () => streakIngredient(ing) }\n    \"data-testid\": `${index}-ingredient-step`,\n    key: `${ing}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => streakIngredient(`${ing}-${index}`, event),\n    \"data-testid\": \"ingredient-search-radio\",\n    type: \"checkbox\",\n    value: ing,\n    name: ing,\n    checked: check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"p\", {\n    id: `${ing}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, ing)) // <p\n  //   key={ `${ing}-${index}` }\n  //   data-testid={ `${index}-ingredient-step` }\n  // >\n  //   {`-${ing} - ${measures[index]}`}\n  // </p>\n  )), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button\",\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    onClick: () => {\n      handleClickStartRecipe(id, ingredients, page);\n      navigate.push('/bebidas/receitas-feitas');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, inProgress ? btnvalue : btnvalue));\n};\n\nRecipeToProgress.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  commonProps: PropTypes.shape({\n    page: PropTypes.string.isRequired,\n    favorite: PropTypes.bool.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default RecipeToProgress;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/RecipeProgress/RecipeToProgress.jsx"],"names":["React","useContext","useState","useHistory","copy","PropTypes","Context","RecipeToProgress","recipe","commonProps","navigate","handleClickStartRecipe","handleClickFavorite","btnvalue","copied","setCopied","check","setCheck","page","favorite","ingredients","measures","inProgress","meals","drinks","id","pathFood","pathDrink","handleClickShare","path","then","catch","err","console","log","streakIngredient","key","event","target","element","document","getElementById","checked","style","textDecoration","strMealThumb","strMeal","strCategory","strInstructions","strYoutube","shareIcon","blackHeartIcon","whiteHeartIcon","map","ing","index","push","strDrinkThumb","strDrink","strAlcoholic","propTypes","objectOf","string","isRequired","shape","bool","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// import YouTube from 'react-youtube';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\n\nimport Context from '../../Context';\n// import Recommendation from '../Recommendation';\n\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\n// const getYouTubeVideoId = (url) => {\n//   if (!url) return 'MAiyzmLhIEw';\n\n//   const start = url.split('').findIndex((char) => char === '=');\n//   const videoId = url.slice(start + 1);\n\n//   return videoId;\n// };\n\nconst RecipeToProgress = ({ recipe, commonProps }) => {\n  const navigate = useHistory();\n  const { handleClickStartRecipe, handleClickFavorite } = useContext(Context);\n  const btnvalue = 'Finalizar Receita';\n  const [copied, setCopied] = useState(false);\n  const [check, setCheck] = useState(false);\n\n  const {\n    page, favorite, ingredients, measures, inProgress, meals, drinks, id,\n  } = commonProps;\n  const pathFood = `http://localhost:3000/comidas/${id}`;\n  const pathDrink = `http://localhost:3000/bebidas/${id}`;\n  const handleClickShare = (path) => {\n    // console.log(path);\n    copy(path)\n      .then(() => setCopied(true))\n      .catch((err) => console.log(err));\n  };\n  const streakIngredient = (key, event) => {\n    console.log(key, event);\n    const { target } = event;\n    const element = document.getElementById(key);\n    if (target.checked === false && element.style.textDecoration !== 'line-through') {\n      setCheck(true);\n      element.style.textDecoration = 'line-through';\n    }\n    if (target.checked === true && element.style.textDecoration === 'line-through') {\n      setCheck(true);\n      element.style.textDecoration = '';\n    }\n  };\n\n  if (page === 'meal') {\n    const { strMealThumb, strMeal, strCategory, strInstructions, strYoutube } = recipe;\n\n    return (\n      <div>\n        <img src={ strMealThumb } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n        <h1 data-testid=\"recipe-title\">{strMeal}</h1>\n        <h3 data-testid=\"recipe-category\">{strCategory}</h3>\n\n        <div>\n          <button\n            type=\"button\"\n            data-testid=\"share-btn\"\n            // value={ pathFood }\n            onClick={ () => handleClickShare(pathFood) }\n          >\n            <img src={ shareIcon } alt=\"share icon\" />\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={ () => handleClickFavorite(recipe, page) }\n          >\n\n            <img\n              src={ favorite ? blackHeartIcon : whiteHeartIcon }\n              alt=\"favorite icon\"\n              data-testid=\"favorite-btn\"\n            />\n          </button>\n        </div>\n        { copied && 'Link copiado!' }\n\n        <h2>Ingredients</h2>\n        <div>\n          {\n            ingredients.map((ing, index) => (\n              <div\n              // onChange={ () => streakIngredient(ing) }\n                data-testid={ `${index}-ingredient-step` }\n                key={ `${ing}-${index}` }\n              >\n                <input\n                  onChange={ () => streakIngredient(`${ing}-${index}`) }\n                  data-testid=\"ingredient-search-radio\"\n                  type=\"checkbox\"\n                  value={ ing }\n                  name={ ing }\n                  // checked={ disabled }\n                />\n                {' '}\n                <p id={ `${ing}-${index}` }>{ing}</p>\n              </div>\n            ))\n          }\n        </div>\n\n        <h2>Instructions</h2>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n\n        {/* <h2 data-testid=\"video\">Video</h2> */}\n        {/* <YouTube\n          videoId={ getYouTubeVideoId(strYoutube) }\n          opts={ { height: '240', width: '360' } }\n        /> */}\n\n        {/* <Recommendation page={ page } recommendations={ drinks } /> */}\n\n        <button\n          className=\"start-button\"\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          onClick={ () => {\n            handleClickStartRecipe(id, ingredients, page);\n            navigate.push('/bebidas/receitas-feitas');\n          } }\n        >\n          {inProgress ? btnvalue : btnvalue}\n        </button>\n      </div>\n    );\n  }\n\n  const { strDrinkThumb, strDrink, strCategory, strInstructions, strAlcoholic } = recipe;\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n      <h1 data-testid=\"recipe-title\">{strDrink}</h1>\n      <h3 data-testid=\"recipe-category\">\n        {strAlcoholic === 'Alcoholic' ? 'Alcoholic' : strCategory}\n      </h3>\n\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"share-btn\"\n          // value={ pathDrink }\n          onClick={ () => handleClickShare(pathDrink) }\n        >\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={ () => handleClickFavorite(recipe, page) }\n        >\n          <img\n            src={ favorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"favorite icon\"\n            data-testid=\"favorite-btn\"\n          />\n        </button>\n      </div>\n      { copied && 'Link copiado!' }\n\n      <h2>Ingredients</h2>\n      <div>\n        {\n          ingredients.map((ing, index) => (\n            <div\n              // onChange={ () => streakIngredient(ing) }\n              data-testid={ `${index}-ingredient-step` }\n              key={ `${ing}-${index}` }\n            >\n              <input\n                onChange={ (event) => streakIngredient(`${ing}-${index}`, event) }\n                data-testid=\"ingredient-search-radio\"\n                type=\"checkbox\"\n                value={ ing }\n                name={ ing }\n                checked={ check }\n              />\n              {' '}\n              <p id={ `${ing}-${index}` }>{ing}</p>\n            </div>\n\n            // <p\n            //   key={ `${ing}-${index}` }\n            //   data-testid={ `${index}-ingredient-step` }\n            // >\n            //   {`-${ing} - ${measures[index]}`}\n            // </p>\n          ))\n        }\n      </div>\n\n      <h2>Instructions</h2>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n\n      {/* <Recommendation page={ page } recommendations={ meals } /> */}\n\n      <button\n        className=\"start-button\"\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={ () => {\n          handleClickStartRecipe(id, ingredients, page);\n          navigate.push('/bebidas/receitas-feitas');\n        } }\n      >\n        { inProgress ? btnvalue : btnvalue }\n      </button>\n\n    </div>\n  );\n};\n\nRecipeToProgress.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  commonProps: PropTypes.shape({\n    page: PropTypes.string.isRequired,\n    favorite: PropTypes.bool.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default RecipeToProgress;\n"]},"metadata":{},"sourceType":"module"}