{"ast":null,"code":"import { useContext, useEffect } from 'react';\nimport Context from '../Context';\nimport Meals from '../services/meals-api';\nimport Drinks from '../services/cocktails-api';\n\nconst errorHandler = err => console.log(err);\n\nconst useLoadApiData = meals => {\n  const {\n    meal: {\n      setMealsData,\n      setMealsCategoryList\n    },\n    drink: {\n      setDrinksData,\n      setDrinksCategoryList\n    }\n  } = useContext(Context);\n  useEffect(() => {\n    const amountToShow = 12;\n    const urlParams = new URLSearchParams(window.location.search);\n    const ing = urlParams.get('ing');\n\n    if (meals && ing) {\n      Meals.searchMealsByIngredient(ing, amountToShow).then(res => setMealsData(res)).catch(errorHandler);\n    }\n\n    if (!meals && ing) {\n      Drinks.searchCocktailsByIngredient(ing, amountToShow).then(res => setDrinksData(res)).catch(errorHandler);\n    }\n\n    if (meals && !ing) {\n      Meals.getMeals(amountToShow).then(res => setMealsData(res)).catch(errorHandler);\n    }\n\n    if (!meals && !ing) {\n      Drinks.getCocktails(amountToShow).then(res => setDrinksData(res)).catch(errorHandler);\n    }\n  }, [meals, setMealsData, setDrinksData]);\n  useEffect(() => {\n    const categoriesAmountToShow = 5;\n\n    if (meals) {\n      Meals.getMealCategoryList(categoriesAmountToShow).then(res => setMealsCategoryList(res)).catch(errorHandler);\n    }\n\n    if (!meals) {\n      Drinks.getCocktailCategoryList(categoriesAmountToShow).then(res => setDrinksCategoryList(res)).catch(errorHandler);\n    }\n  }, [meals, setMealsCategoryList, setDrinksCategoryList]);\n};\n\nexport default useLoadApiData;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/Hooks/useLoadApiData.js"],"names":["useContext","useEffect","Context","Meals","Drinks","errorHandler","err","console","log","useLoadApiData","meals","meal","setMealsData","setMealsCategoryList","drink","setDrinksData","setDrinksCategoryList","amountToShow","urlParams","URLSearchParams","window","location","search","ing","get","searchMealsByIngredient","then","res","catch","searchCocktailsByIngredient","getMeals","getCocktails","categoriesAmountToShow","getMealCategoryList","getCocktailCategoryList"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,YAAY,GAAIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAA9B;;AAEA,MAAMG,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KADF;AAEJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB;AAFH,MAGFhB,UAAU,CAACE,OAAD,CAHd;AAKAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,YAAY,GAAG,EAArB;AAEA,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,UAAMC,GAAG,GAAGL,SAAS,CAACM,GAAV,CAAc,KAAd,CAAZ;;AAEA,QAAId,KAAK,IAAIa,GAAb,EAAkB;AAChBpB,MAAAA,KAAK,CAACsB,uBAAN,CAA8BF,GAA9B,EAAmCN,YAAnC,EACGS,IADH,CACSC,GAAD,IAASf,YAAY,CAACe,GAAD,CAD7B,EAEGC,KAFH,CAESvB,YAFT;AAGD;;AAED,QAAI,CAACK,KAAD,IAAUa,GAAd,EAAmB;AACjBnB,MAAAA,MAAM,CAACyB,2BAAP,CAAmCN,GAAnC,EAAwCN,YAAxC,EACGS,IADH,CACSC,GAAD,IAASZ,aAAa,CAACY,GAAD,CAD9B,EAEGC,KAFH,CAESvB,YAFT;AAGD;;AAED,QAAIK,KAAK,IAAI,CAACa,GAAd,EAAmB;AACjBpB,MAAAA,KAAK,CAAC2B,QAAN,CAAeb,YAAf,EACGS,IADH,CACSC,GAAD,IAASf,YAAY,CAACe,GAAD,CAD7B,EAEGC,KAFH,CAESvB,YAFT;AAGD;;AAED,QAAI,CAACK,KAAD,IAAU,CAACa,GAAf,EAAoB;AAClBnB,MAAAA,MAAM,CAAC2B,YAAP,CAAoBd,YAApB,EACGS,IADH,CACSC,GAAD,IAASZ,aAAa,CAACY,GAAD,CAD9B,EAEGC,KAFH,CAESvB,YAFT;AAGD;AACF,GA7BQ,EA6BN,CAACK,KAAD,EAAQE,YAAR,EAAsBG,aAAtB,CA7BM,CAAT;AA+BAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+B,sBAAsB,GAAG,CAA/B;;AAEA,QAAItB,KAAJ,EAAW;AACTP,MAAAA,KAAK,CAAC8B,mBAAN,CAA0BD,sBAA1B,EACGN,IADH,CACSC,GAAD,IAASd,oBAAoB,CAACc,GAAD,CADrC,EAEGC,KAFH,CAESvB,YAFT;AAGD;;AAED,QAAI,CAACK,KAAL,EAAY;AACVN,MAAAA,MAAM,CAAC8B,uBAAP,CAA+BF,sBAA/B,EACGN,IADH,CACSC,GAAD,IAASX,qBAAqB,CAACW,GAAD,CADtC,EAEGC,KAFH,CAESvB,YAFT;AAGD;AACF,GAdQ,EAcN,CAACK,KAAD,EAAQG,oBAAR,EAA8BG,qBAA9B,CAdM,CAAT;AAeD,CApDD;;AAqDA,eAAeP,cAAf","sourcesContent":["import { useContext, useEffect } from 'react';\n\nimport Context from '../Context';\nimport Meals from '../services/meals-api';\nimport Drinks from '../services/cocktails-api';\n\nconst errorHandler = (err) => console.log(err);\n\nconst useLoadApiData = (meals) => {\n  const {\n    meal: { setMealsData, setMealsCategoryList },\n    drink: { setDrinksData, setDrinksCategoryList },\n  } = useContext(Context);\n\n  useEffect(() => {\n    const amountToShow = 12;\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const ing = urlParams.get('ing');\n\n    if (meals && ing) {\n      Meals.searchMealsByIngredient(ing, amountToShow)\n        .then((res) => setMealsData(res))\n        .catch(errorHandler);\n    }\n\n    if (!meals && ing) {\n      Drinks.searchCocktailsByIngredient(ing, amountToShow)\n        .then((res) => setDrinksData(res))\n        .catch(errorHandler);\n    }\n\n    if (meals && !ing) {\n      Meals.getMeals(amountToShow)\n        .then((res) => setMealsData(res))\n        .catch(errorHandler);\n    }\n\n    if (!meals && !ing) {\n      Drinks.getCocktails(amountToShow)\n        .then((res) => setDrinksData(res))\n        .catch(errorHandler);\n    }\n  }, [meals, setMealsData, setDrinksData]);\n\n  useEffect(() => {\n    const categoriesAmountToShow = 5;\n\n    if (meals) {\n      Meals.getMealCategoryList(categoriesAmountToShow)\n        .then((res) => setMealsCategoryList(res))\n        .catch(errorHandler);\n    }\n\n    if (!meals) {\n      Drinks.getCocktailCategoryList(categoriesAmountToShow)\n        .then((res) => setDrinksCategoryList(res))\n        .catch(errorHandler);\n    }\n  }, [meals, setMealsCategoryList, setDrinksCategoryList]);\n};\nexport default useLoadApiData;\n"]},"metadata":{},"sourceType":"module"}