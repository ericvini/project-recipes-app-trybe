{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/Context/RecipesProvider.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './index';\nimport Meals from '../services/meals-api';\nimport Drinks from '../services/cocktails-api';\n\nfunction RecipesProvider({\n  children\n}) {\n  const [mealsData, setMealsData] = useState([]);\n  const [mealsFilteredData, setMealsFilteredData] = useState([]);\n  const [mealsCategoryList, setMealsCategoryList] = useState([]);\n  const [currentFilterMealsCategory, setCurrentFilterMealsCategory] = useState('All');\n  const [drinksData, setDrinksData] = useState([]);\n  const [drinksFilteredData, setDrinksFilteredData] = useState([]);\n  const [drinksCategoryList, setDrinksCategoryList] = useState([]);\n  const [currentFilterDrinksCategory, setCurrentFilterDrinksCategory] = useState('All');\n  const [inProgressRecipes, setInProgressRecipes] = useState({});\n  const [updatingLocalStorage, setUpdatingLocalStorage] = useState(true);\n  useEffect(() => {\n    const inProgressRecipesString = localStorage.getItem('inProgressRecipes');\n    const inProgressRecipesObj = JSON.parse(inProgressRecipesString);\n\n    if (inProgressRecipesObj) {\n      setInProgressRecipes(inProgressRecipesObj);\n      setUpdatingLocalStorage(false);\n    }\n\n    setUpdatingLocalStorage(false);\n  }, []);\n  useEffect(() => {\n    if (!updatingLocalStorage) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    }\n  }, [inProgressRecipes, updatingLocalStorage]);\n  useEffect(() => {\n    setMealsFilteredData(mealsData);\n  }, [mealsData]);\n  useEffect(() => {\n    setDrinksFilteredData(drinksData);\n  }, [drinksData]);\n\n  const handleClickCategoryMeals = async category => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setMealsFilteredData(mealsData);\n      return setCurrentFilterMealsCategory('All');\n    }\n\n    if (currentFilterMealsCategory !== category) {\n      const meals = await Meals.searchMealsByCategory(category, mealsAmountToShow);\n      setMealsFilteredData(meals);\n      return setCurrentFilterMealsCategory(category);\n    }\n\n    setMealsFilteredData(mealsData);\n    setCurrentFilterMealsCategory('All');\n  };\n\n  const handleClickCategoryDrinks = async category => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setDrinksFilteredData(drinksData);\n      return setCurrentFilterDrinksCategory('All');\n    }\n\n    if (currentFilterDrinksCategory !== category) {\n      const drinks = await Drinks.searchCocktailsByCategory(category, mealsAmountToShow);\n      setDrinksFilteredData(drinks);\n      return setCurrentFilterDrinksCategory(category);\n    }\n\n    setDrinksFilteredData(drinksData);\n    setCurrentFilterDrinksCategory('All');\n  };\n\n  const verifyInProgress = (id, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n\n    if (inProgressRecipes[key]) {\n      const isInProgress = inProgressRecipes[key][id];\n      if (isInProgress) return true;\n    }\n\n    return false;\n  };\n\n  const handleClickStartRecipe = (id, ingredients, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n    const isInProgress = verifyInProgress(id, page);\n\n    if (!isInProgress) {\n      setInProgressRecipes(state => ({ ...state,\n        [key]: { ...state[key],\n          [id]: ingredients\n        }\n      }));\n    }\n  };\n\n  const states = {\n    verifyInProgress,\n    handleClickStartRecipe,\n    email: '',\n    meal: {\n      mealsData,\n      setMealsData,\n      mealsCategoryList,\n      setMealsCategoryList,\n      mealsFilteredData,\n      setMealsFilteredData,\n      handleClickCategoryMeals\n    },\n    drink: {\n      drinksData,\n      setDrinksData,\n      drinksCategoryList,\n      setDrinksCategoryList,\n      drinksFilteredData,\n      setDrinksFilteredData,\n      handleClickCategoryDrinks\n    }\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: states,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default RecipesProvider;\nRecipesProvider.propTypes = {\n  children: PropTypes.element\n};\nRecipesProvider.defaultProps = {\n  children: PropTypes.element\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/Context/RecipesProvider.jsx"],"names":["React","useEffect","useState","PropTypes","RecipesContext","Meals","Drinks","RecipesProvider","children","mealsData","setMealsData","mealsFilteredData","setMealsFilteredData","mealsCategoryList","setMealsCategoryList","currentFilterMealsCategory","setCurrentFilterMealsCategory","drinksData","setDrinksData","drinksFilteredData","setDrinksFilteredData","drinksCategoryList","setDrinksCategoryList","currentFilterDrinksCategory","setCurrentFilterDrinksCategory","inProgressRecipes","setInProgressRecipes","updatingLocalStorage","setUpdatingLocalStorage","inProgressRecipesString","localStorage","getItem","inProgressRecipesObj","JSON","parse","setItem","stringify","handleClickCategoryMeals","category","mealsAmountToShow","meals","searchMealsByCategory","handleClickCategoryDrinks","drinks","searchCocktailsByCategory","verifyInProgress","id","page","key","isInProgress","handleClickStartRecipe","ingredients","state","states","email","meal","drink","propTypes","element","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RecipesContext from './index';\nimport Meals from '../services/meals-api';\nimport Drinks from '../services/cocktails-api';\n\nfunction RecipesProvider({ children }) {\n  const [mealsData, setMealsData] = useState([]);\n  const [mealsFilteredData, setMealsFilteredData] = useState([]);\n  const [mealsCategoryList, setMealsCategoryList] = useState([]);\n  const [currentFilterMealsCategory, setCurrentFilterMealsCategory] = useState('All');\n\n  const [drinksData, setDrinksData] = useState([]);\n  const [drinksFilteredData, setDrinksFilteredData] = useState([]);\n  const [drinksCategoryList, setDrinksCategoryList] = useState([]);\n  const [currentFilterDrinksCategory, setCurrentFilterDrinksCategory] = useState('All');\n\n  const [inProgressRecipes, setInProgressRecipes] = useState({});\n  const [updatingLocalStorage, setUpdatingLocalStorage] = useState(true);\n\n  useEffect(() => {\n    const inProgressRecipesString = localStorage.getItem('inProgressRecipes');\n    const inProgressRecipesObj = JSON.parse(inProgressRecipesString);\n\n    if (inProgressRecipesObj) {\n      setInProgressRecipes(inProgressRecipesObj);\n      setUpdatingLocalStorage(false);\n    }\n    setUpdatingLocalStorage(false);\n  }, []);\n\n  useEffect(() => {\n    if (!updatingLocalStorage) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    }\n  }, [inProgressRecipes, updatingLocalStorage]);\n\n  useEffect(() => {\n    setMealsFilteredData(mealsData);\n  }, [mealsData]);\n\n  useEffect(() => {\n    setDrinksFilteredData(drinksData);\n  }, [drinksData]);\n\n  const handleClickCategoryMeals = async (category) => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setMealsFilteredData(mealsData);\n      return setCurrentFilterMealsCategory('All');\n    }\n\n    if (currentFilterMealsCategory !== category) {\n      const meals = await Meals.searchMealsByCategory(category, mealsAmountToShow);\n      setMealsFilteredData(meals);\n      return setCurrentFilterMealsCategory(category);\n    }\n\n    setMealsFilteredData(mealsData);\n    setCurrentFilterMealsCategory('All');\n  };\n\n  const handleClickCategoryDrinks = async (category) => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setDrinksFilteredData(drinksData);\n      return setCurrentFilterDrinksCategory('All');\n    }\n\n    if (currentFilterDrinksCategory !== category) {\n      const drinks = await Drinks.searchCocktailsByCategory(category, mealsAmountToShow);\n      setDrinksFilteredData(drinks);\n      return setCurrentFilterDrinksCategory(category);\n    }\n\n    setDrinksFilteredData(drinksData);\n    setCurrentFilterDrinksCategory('All');\n  };\n\n  const verifyInProgress = (id, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n\n    if (inProgressRecipes[key]) {\n      const isInProgress = inProgressRecipes[key][id];\n      if (isInProgress) return true;\n    }\n    return false;\n  };\n\n  const handleClickStartRecipe = (id, ingredients, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n\n    const isInProgress = verifyInProgress(id, page);\n\n    if (!isInProgress) {\n      setInProgressRecipes((state) => ({\n        ...state,\n        [key]: { ...state[key], [id]: ingredients },\n      }));\n    }\n  };\n\n  const states = {\n    verifyInProgress,\n    handleClickStartRecipe,\n    email: '',\n    meal: {\n      mealsData,\n      setMealsData,\n      mealsCategoryList,\n      setMealsCategoryList,\n      mealsFilteredData,\n      setMealsFilteredData,\n      handleClickCategoryMeals,\n    },\n    drink: {\n      drinksData,\n      setDrinksData,\n      drinksCategoryList,\n      setDrinksCategoryList,\n      drinksFilteredData,\n      setDrinksFilteredData,\n      handleClickCategoryDrinks,\n    },\n  };\n\n  return (\n    <RecipesContext.Provider value={ states }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nexport default RecipesProvider;\n\nRecipesProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nRecipesProvider.defaultProps = {\n  children: PropTypes.element,\n};\n"]},"metadata":{},"sourceType":"module"}