{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/SearchBarFood/SearchBarFood.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport meals from '../../services/meals-api';\nimport CardMeals from '../CardMeals/CardMeals';\n\nfunction SearchBarByFood(props) {\n  const {\n    searchValue\n  } = props;\n  const [meal, setMeal] = useState('');\n  const [radio, setRadio] = useState('');\n  const firstLetter = 'Primeira letra';\n  const isFetching = true;\n  const maxCard = 12;\n\n  function searchByFood(event) {\n    if (event.target.value === 'Ingredientes') {\n      setRadio('Ingredientes');\n    } else if (event.target.value === 'Nome') {\n      setRadio('Nome');\n    } else {\n      setRadio(firstLetter);\n    }\n  }\n\n  function verifyIsNull(response) {\n    if (response === 'undefined' || response === 'null') {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n  }\n\n  function verifyIsEqual1(response) {\n    if (response.length === 1) {\n      console.log('len');\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/comidas/:${Object.entries(response)[1].idMeal}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  async function handlerClick() {\n    if (radio === 'Ingredientes') {\n      const response = await meals.searchMealsByIngredient(searchValue, maxCard);\n      verifyIsNull(response);\n      verifyIsEqual1(response);\n      setMeal(response);\n    }\n\n    if (radio === 'Nome') {\n      const response = await meals.searchMealsByName(searchValue, maxCard);\n      verifyIsNull(response);\n      verifyIsEqual1(response);\n      setMeal(response);\n    }\n\n    if (radio === firstLetter && searchValue.length === 1) {\n      const response = await meals.searchMealsByFirstLetter(searchValue, maxCard);\n      verifyIsNull(response);\n      verifyIsEqual1(response);\n      setMeal(response);\n    }\n\n    if (radio === 'Primeira letra' && searchValue.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onChange: event => searchByFood(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"ingredient-search-radio\",\n    type: \"radio\",\n    value: \"Ingredientes\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), ' ', \"Ingredientes\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-search-radio\",\n    type: \"radio\",\n    value: \"Nome\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), ' ', \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"first-letter-search-radio\",\n    type: \"radio\",\n    value: \"Primeira letra\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), ' ', \"Primeira letra\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: handlerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Buscar\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, Object.entries(meal).map((item, index) => /*#__PURE__*/React.createElement(CardMeals, {\n    \"data-testid\": `${index}-recipe-card`,\n    key: index,\n    index: index,\n    item: item[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))));\n}\n\nSearchBarByFood.propTypes = {\n  searchValue: PropTypes.string.isRequired\n};\nexport default SearchBarByFood; // {isFetching && meal.map((item, index) => (\n//   <CardMeals key={ index } item={ item } />\n// ))}","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/SearchBarFood/SearchBarFood.jsx"],"names":["React","useState","PropTypes","Redirect","meals","CardMeals","SearchBarByFood","props","searchValue","meal","setMeal","radio","setRadio","firstLetter","isFetching","maxCard","searchByFood","event","target","value","verifyIsNull","response","alert","verifyIsEqual1","length","console","log","Object","entries","idMeal","handlerClick","searchMealsByIngredient","searchMealsByName","searchMealsByFirstLetter","map","item","index","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport meals from '../../services/meals-api';\nimport CardMeals from '../CardMeals/CardMeals';\n\nfunction SearchBarByFood(props) {\n  const { searchValue } = props;\n  const [meal, setMeal] = useState('');\n  const [radio, setRadio] = useState('');\n  const firstLetter = 'Primeira letra';\n  const isFetching = true;\n  const maxCard = 12;\n  function searchByFood(event) {\n    if (event.target.value === 'Ingredientes') {\n      setRadio('Ingredientes');\n    } else if (event.target.value === 'Nome') {\n      setRadio('Nome');\n    } else {\n      setRadio(firstLetter);\n    }\n  }\n  function verifyIsNull(response) {\n    if (response === 'undefined' || response === 'null') {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n  }\n  function verifyIsEqual1(response) {\n    if (response.length === 1) {\n      console.log('len');\n      return <Redirect to={ `/comidas/:${Object.entries(response)[1].idMeal}` } />;\n    }\n  }\n\n  async function handlerClick() {\n    if (radio === 'Ingredientes') {\n      const response = await meals.searchMealsByIngredient(searchValue, maxCard);\n      verifyIsNull(response);\n      verifyIsEqual1(response);\n      setMeal(response);\n    }\n    if (radio === 'Nome') {\n      const response = await meals.searchMealsByName(searchValue, maxCard);\n      verifyIsNull(response);\n      verifyIsEqual1(response);\n      setMeal(response);\n    }\n    if (radio === firstLetter && searchValue.length === 1) {\n      const response = await meals.searchMealsByFirstLetter(searchValue, maxCard);\n      verifyIsNull(response);\n      verifyIsEqual1(response);\n      setMeal(response);\n    }\n    if (radio === 'Primeira letra' && searchValue.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }\n\n  return (\n    <div>\n      <div onChange={ (event) => searchByFood(event) }>\n        <input\n          data-testid=\"ingredient-search-radio\"\n          type=\"radio\"\n          value=\"Ingredientes\"\n          name=\"foods\"\n        />\n        {' '}\n        Ingredientes\n        <input\n          data-testid=\"name-search-radio\"\n          type=\"radio\"\n          value=\"Nome\"\n          name=\"foods\"\n        />\n        {' '}\n        Nome\n        <input\n          data-testid=\"first-letter-search-radio\"\n          type=\"radio\"\n          value=\"Primeira letra\"\n          name=\"foods\"\n        />\n        {' '}\n        Primeira letra\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ handlerClick }\n        >\n          Buscar\n        </button>\n      </div>\n      <div>\n        { Object.entries(meal).map((item, index) => (\n\n          <CardMeals\n            data-testid={ `${index}-recipe-card` }\n            key={ index }\n            index={ index }\n            item={ item[1] }\n          />\n        ))}\n      </div>\n    </div>\n\n  );\n}\nSearchBarByFood.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n};\nexport default SearchBarByFood;\n// {isFetching && meal.map((item, index) => (\n//   <CardMeals key={ index } item={ item } />\n// ))}\n"]},"metadata":{},"sourceType":"module"}