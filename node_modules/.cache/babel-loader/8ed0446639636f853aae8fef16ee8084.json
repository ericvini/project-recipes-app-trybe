{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/RecipeDetails/index.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport YouTube from 'react-youtube';\nimport './style.css';\nimport Context from '../../Context';\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\nimport Recommendation from '../Recommendation';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\n\nconst filterFoodKeys = food => {\n  const objKeys = Object.keys(food);\n  const filteredIngredientKeys = objKeys.filter(key => key.includes('strIngredient'));\n  const filteredMeasureKeys = objKeys.filter(key => key.includes('strMeasure'));\n  const ingredientsObj = filteredIngredientKeys.map(key => food[key]);\n  const measuresObj = filteredMeasureKeys.map(key => food[key]);\n  const ingredientsObjFiltered = ingredientsObj.filter(ing => ing);\n  const measuresObjFiltered = measuresObj.filter(ing => ing);\n  return [ingredientsObjFiltered, measuresObjFiltered];\n};\n\nconst getYouTubeVideoId = url => {\n  if (!url) return 'MAiyzmLhIEw';\n  const start = url.split('').findIndex(char => char === '=');\n  const videoId = url.slice(start + 1);\n  return videoId;\n};\n\nconst RecipeDetails = ({\n  page\n}) => {\n  const {\n    id\n  } = useParams();\n  const {\n    handleClickStartRecipe,\n    verifyInProgress\n  } = useContext(Context);\n  const [meal, setMeal] = useState({});\n  const [drink, setDrink] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const [inProgress, setInProgress] = useState(false);\n  useEffect(() => {\n    const isInProgress = verifyInProgress(id, page);\n\n    if (isInProgress) {\n      setInProgress(true);\n    }\n  }, [verifyInProgress, id, page]);\n  useEffect(() => {\n    const limitToShow = 6;\n\n    if (page === 'meal') {\n      Meals.getMealDetailsById(id).then(res => {\n        const [filteredIngredients, filteredMeasures] = filterFoodKeys(res);\n        setIngredients(filteredIngredients);\n        setMeasures(filteredMeasures);\n        setMeal(res);\n        setIsFetching(false);\n      }).catch(err => console.log(err));\n      Drinks.getCocktails(limitToShow).then(res => setDrinks(res)).catch(err => console.log(err));\n    }\n\n    if (page === 'drink') {\n      Drinks.getCocktailDetailsById(id).then(res => {\n        const [filteredIngredients, filteredMeasures] = filterFoodKeys(res);\n        setIngredients(filteredIngredients);\n        setMeasures(filteredMeasures);\n        setDrink(res);\n        setIsFetching(false);\n      }).catch(err => console.log(err));\n      Meals.getMeals(limitToShow).then(res => setMeals(res)).catch(err => console.log(err));\n    }\n  }, [page, id]);\n\n  if (isFetching) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 12\n      }\n    }, \"Loading details...\");\n  }\n\n  if (page === 'meal') {\n    const {\n      strMealThumb,\n      strMeal,\n      strCategory,\n      strInstructions,\n      strYoutube\n    } = meal;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: strMealThumb,\n      width: \"150\",\n      alt: \"meal\",\n      \"data-testid\": \"recipe-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, strMeal), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, strCategory), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"share-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"share icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: whiteHeartIcon,\n      alt: \"favorite icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"p\", {\n      key: `${ing}-${index}`,\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, `-${ing} - ${measures[index]}`))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, strInstructions), /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, \"Video\"), /*#__PURE__*/React.createElement(YouTube, {\n      videoId: getYouTubeVideoId(strYoutube),\n      opts: {\n        height: '240',\n        width: '360'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Recommendation, {\n      page: page,\n      recommendations: drinks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"start-button\",\n      type: \"button\",\n      \"data-testid\": \"start-recipe-btn\",\n      onClick: () => handleClickStartRecipe(id, ingredients, page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, inProgress ? 'Continuar Receita' : 'Iniciar Receita'));\n  }\n\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic\n  } = drink;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    width: \"150\",\n    alt: \"meal\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, strAlcoholic === 'Alcoholic' ? 'Alcoholic' : strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"share icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: whiteHeartIcon,\n    alt: \"favorite icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: `${ing}-${index}`,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, `-${ing} - ${measures[index]}`))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(Recommendation, {\n    page: page,\n    recommendations: meals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: () => handleClickStartRecipe(id, ingredients, page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, inProgress ? 'Continuar Receita' : 'Iniciar Receita'));\n};\n\nRecipeDetails.propTypes = {\n  page: PropTypes.string.isRequired\n};\nexport default RecipeDetails;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/RecipeDetails/index.jsx"],"names":["React","useContext","useEffect","useState","useParams","PropTypes","YouTube","Context","Meals","Drinks","Recommendation","filterFoodKeys","food","objKeys","Object","keys","filteredIngredientKeys","filter","key","includes","filteredMeasureKeys","ingredientsObj","map","measuresObj","ingredientsObjFiltered","ing","measuresObjFiltered","getYouTubeVideoId","url","start","split","findIndex","char","videoId","slice","RecipeDetails","page","id","handleClickStartRecipe","verifyInProgress","meal","setMeal","drink","setDrink","meals","setMeals","drinks","setDrinks","ingredients","setIngredients","measures","setMeasures","isFetching","setIsFetching","inProgress","setInProgress","isInProgress","limitToShow","getMealDetailsById","then","res","filteredIngredients","filteredMeasures","catch","err","console","log","getCocktails","getCocktailDetailsById","getMeals","strMealThumb","strMeal","strCategory","strInstructions","strYoutube","shareIcon","whiteHeartIcon","index","height","width","strDrinkThumb","strDrink","strAlcoholic","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport YouTube from 'react-youtube';\n\nimport './style.css';\n\nimport Context from '../../Context';\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\nimport Recommendation from '../Recommendation';\n\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\n\nconst filterFoodKeys = (food) => {\n  const objKeys = Object.keys(food);\n\n  const filteredIngredientKeys = objKeys.filter((key) => key.includes('strIngredient'));\n  const filteredMeasureKeys = objKeys.filter((key) => key.includes('strMeasure'));\n\n  const ingredientsObj = filteredIngredientKeys.map((key) => food[key]);\n  const measuresObj = filteredMeasureKeys.map((key) => food[key]);\n\n  const ingredientsObjFiltered = ingredientsObj.filter((ing) => ing);\n  const measuresObjFiltered = measuresObj.filter((ing) => ing);\n\n  return [ingredientsObjFiltered, measuresObjFiltered];\n};\n\nconst getYouTubeVideoId = (url) => {\n  if (!url) return 'MAiyzmLhIEw';\n\n  const start = url.split('').findIndex((char) => char === '=');\n  const videoId = url.slice(start + 1);\n\n  return videoId;\n};\n\nconst RecipeDetails = ({ page }) => {\n  const { id } = useParams();\n  const { handleClickStartRecipe, verifyInProgress } = useContext(Context);\n  const [meal, setMeal] = useState({});\n  const [drink, setDrink] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const [inProgress, setInProgress] = useState(false);\n\n  useEffect(() => {\n    const isInProgress = verifyInProgress(id, page);\n    if (isInProgress) {\n      setInProgress(true);\n    }\n  }, [verifyInProgress, id, page]);\n\n  useEffect(() => {\n    const limitToShow = 6;\n\n    if (page === 'meal') {\n      Meals.getMealDetailsById(id)\n        .then((res) => {\n          const [filteredIngredients, filteredMeasures] = filterFoodKeys(res);\n          setIngredients(filteredIngredients);\n          setMeasures(filteredMeasures);\n          setMeal(res);\n          setIsFetching(false);\n        })\n        .catch((err) => console.log(err));\n\n      Drinks.getCocktails(limitToShow)\n        .then((res) => setDrinks(res))\n        .catch((err) => console.log(err));\n    }\n\n    if (page === 'drink') {\n      Drinks.getCocktailDetailsById(id)\n        .then((res) => {\n          const [filteredIngredients, filteredMeasures] = filterFoodKeys(res);\n          setIngredients(filteredIngredients);\n          setMeasures(filteredMeasures);\n          setDrink(res);\n          setIsFetching(false);\n        })\n        .catch((err) => console.log(err));\n\n      Meals.getMeals(limitToShow)\n        .then((res) => setMeals(res))\n        .catch((err) => console.log(err));\n    }\n  }, [page, id]);\n\n  if (isFetching) {\n    return <h1>Loading details...</h1>;\n  }\n\n  if (page === 'meal') {\n    const { strMealThumb, strMeal, strCategory, strInstructions, strYoutube } = meal;\n\n    return (\n      <div>\n        <img src={ strMealThumb } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n        <h1 data-testid=\"recipe-title\">{strMeal}</h1>\n        <h3 data-testid=\"recipe-category\">{strCategory}</h3>\n\n        <div>\n          <button type=\"button\" data-testid=\"share-btn\">\n            <img src={ shareIcon } alt=\"share icon\" />\n          </button>\n\n          <button type=\"button\" data-testid=\"favorite-btn\">\n            <img src={ whiteHeartIcon } alt=\"favorite icon\" />\n          </button>\n        </div>\n\n        <h2>Ingredients</h2>\n        <div>\n          {\n            ingredients.map((ing, index) => (\n              <p\n                key={ `${ing}-${index}` }\n                data-testid={ `${index}-ingredient-name-and-measure` }\n              >\n                {`-${ing} - ${measures[index]}`}\n              </p>\n            ))\n          }\n        </div>\n\n        <h2>Instructions</h2>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n\n        <h2 data-testid=\"video\">Video</h2>\n        <YouTube\n          videoId={ getYouTubeVideoId(strYoutube) }\n          opts={ { height: '240', width: '360' } }\n        />\n\n        <Recommendation page={ page } recommendations={ drinks } />\n\n        <button\n          className=\"start-button\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          onClick={ () => handleClickStartRecipe(id, ingredients, page) }\n        >\n          { inProgress ? 'Continuar Receita' : 'Iniciar Receita' }\n        </button>\n      </div>\n    );\n  }\n\n  const { strDrinkThumb, strDrink, strCategory, strInstructions, strAlcoholic } = drink;\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n      <h1 data-testid=\"recipe-title\">{strDrink}</h1>\n      <h3 data-testid=\"recipe-category\">\n        {strAlcoholic === 'Alcoholic' ? 'Alcoholic' : strCategory}\n      </h3>\n\n      <div>\n        <button type=\"button\" data-testid=\"share-btn\">\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n\n        <button type=\"button\" data-testid=\"favorite-btn\">\n          <img src={ whiteHeartIcon } alt=\"favorite icon\" />\n        </button>\n      </div>\n\n      <h2>Ingredients</h2>\n      <div>\n        {\n          ingredients.map((ing, index) => (\n            <p\n              key={ `${ing}-${index}` }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {`-${ing} - ${measures[index]}`}\n            </p>\n          ))\n        }\n      </div>\n\n      <h2>Instructions</h2>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n\n      <Recommendation page={ page } recommendations={ meals } />\n\n      <button\n        className=\"start-button\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ () => handleClickStartRecipe(id, ingredients, page) }\n      >\n        { inProgress ? 'Continuar Receita' : 'Iniciar Receita' }\n      </button>\n\n    </div>\n  );\n};\n\nRecipeDetails.propTypes = { page: PropTypes.string.isRequired };\n\nexport default RecipeDetails;\n"]},"metadata":{},"sourceType":"module"}