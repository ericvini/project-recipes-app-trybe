{"ast":null,"code":"var _jsxFileName = \"/home/eric/recipes-app/src/components/Recipe/index.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport YouTube from 'react-youtube';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport Context from '../../Context';\nimport Recommendation from '../Recommendation';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\n\nconst getYouTubeVideoId = url => {\n  if (!url) return 'MAiyzmLhIEw';\n  const start = url.split('').findIndex(char => char === '=');\n  const videoId = url.slice(start + 1);\n  return videoId;\n};\n\nconst Recipe = ({\n  id,\n  area,\n  image,\n  name,\n  category,\n  instructions,\n  youtube,\n  alcoholic,\n  meal,\n  commonProps\n}) => {\n  const navigate = useHistory();\n  const {\n    handleClickStartRecipe,\n    handleClickFavorite\n  } = useContext(Context);\n  const [copied, setCopied] = useState(false);\n  const {\n    favorite,\n    ingredients,\n    measures,\n    inProgress,\n    meals,\n    drinks\n  } = commonProps;\n\n  const handleClickShare = () => {\n    copy(window.location.href).then(() => setCopied(true)).catch(err => console.log(err));\n  };\n\n  const onClickFavorite = () => {\n    if (meal) {\n      const recipe = {\n        id,\n        area,\n        category,\n        name,\n        image\n      };\n      return handleClickFavorite(recipe, meal);\n    }\n\n    const recipe = {\n      id,\n      category,\n      alcoholic,\n      name,\n      image\n    };\n    handleClickFavorite(recipe);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, copied && 'Link copiado!', /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    width: \"150\",\n    alt: \"meal\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, meal ? category : alcoholic), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    onClick: handleClickShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"share icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClickFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: favorite ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favorite icon\",\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: `${ing}-${index}`,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, `-${ing} - ${measures[index]}`))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, instructions), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Video\"), /*#__PURE__*/React.createElement(YouTube, {\n    videoId: getYouTubeVideoId(youtube),\n    opts: {\n      height: '240',\n      width: '360'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Recommendation, {\n    page: meal ? 'meal' : 'drink',\n    recommendations: meal ? drinks : meals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: () => {\n      handleClickStartRecipe(id, ingredients, meal ? 'meal' : 'drink');\n      return meal ? navigate.push(`/comidas/${id}/in-progress`) : navigate.push(`/bebidas/${id}/in-progress`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, inProgress ? 'Continuar Receita' : 'Iniciar Receita'));\n}; // Recipe.defaultProps = { alcoholic: null };\n\n\nRecipe.propTypes = {\n  id: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  instructions: PropTypes.string.isRequired,\n  youtube: PropTypes.string.isRequired,\n  alcoholic: PropTypes.string.isRequired,\n  meal: PropTypes.bool.isRequired,\n  commonProps: PropTypes.shape({\n    isMeal: PropTypes.bool.isRequired,\n    favorite: PropTypes.bool.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired\n  }).isRequired\n};\nexport default Recipe;","map":{"version":3,"sources":["/home/eric/recipes-app/src/components/Recipe/index.jsx"],"names":["React","useContext","useState","useHistory","YouTube","copy","PropTypes","Context","Recommendation","getYouTubeVideoId","url","start","split","findIndex","char","videoId","slice","Recipe","id","area","image","name","category","instructions","youtube","alcoholic","meal","commonProps","navigate","handleClickStartRecipe","handleClickFavorite","copied","setCopied","favorite","ingredients","measures","inProgress","meals","drinks","handleClickShare","window","location","href","then","catch","err","console","log","onClickFavorite","recipe","shareIcon","blackHeartIcon","whiteHeartIcon","map","ing","index","height","width","push","propTypes","string","isRequired","bool","shape","isMeal","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport YouTube from 'react-youtube';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\n\nimport Context from '../../Context';\nimport Recommendation from '../Recommendation';\n\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nconst getYouTubeVideoId = (url) => {\n  if (!url) return 'MAiyzmLhIEw';\n\n  const start = url.split('').findIndex((char) => char === '=');\n  const videoId = url.slice(start + 1);\n\n  return videoId;\n};\n\nconst Recipe = ({\n  id, area, image, name, category, instructions, youtube, alcoholic, meal, commonProps,\n}) => {\n  const navigate = useHistory();\n  const { handleClickStartRecipe, handleClickFavorite } = useContext(Context);\n  const [copied, setCopied] = useState(false);\n\n  const { favorite, ingredients, measures, inProgress, meals, drinks } = commonProps;\n\n  const handleClickShare = () => {\n    copy(window.location.href)\n      .then(() => setCopied(true))\n      .catch((err) => console.log(err));\n  };\n\n  const onClickFavorite = () => {\n    if (meal) {\n      const recipe = { id, area, category, name, image };\n      return handleClickFavorite(recipe, meal);\n    }\n    const recipe = { id, category, alcoholic, name, image };\n    handleClickFavorite(recipe);\n  };\n\n  return (\n    <div>\n      { copied && 'Link copiado!' }\n\n      <img src={ image } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n      <h1 data-testid=\"recipe-title\">{name}</h1>\n      <h3 data-testid=\"recipe-category\">\n        {meal ? category : alcoholic}\n      </h3>\n\n      <div>\n        <button type=\"button\" data-testid=\"share-btn\" onClick={ handleClickShare }>\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={ onClickFavorite }\n        >\n          <img\n            src={ favorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"favorite icon\"\n            data-testid=\"favorite-btn\"\n          />\n        </button>\n      </div>\n\n      <h2>Ingredients</h2>\n      <div>\n        {\n          ingredients.map((ing, index) => (\n            <p\n              key={ `${ing}-${index}` }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {`-${ing} - ${measures[index]}`}\n            </p>\n          ))\n        }\n      </div>\n\n      <h2>Instructions</h2>\n      <p data-testid=\"instructions\">{instructions}</p>\n\n      <h2 data-testid=\"video\">Video</h2>\n      <YouTube\n        videoId={ getYouTubeVideoId(youtube) }\n        opts={ { height: '240', width: '360' } }\n      />\n\n      <Recommendation\n        page={ meal ? 'meal' : 'drink' }\n        recommendations={ meal ? drinks : meals }\n      />\n\n      <button\n        className=\"start-button\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ () => {\n          handleClickStartRecipe(id, ingredients, meal ? 'meal' : 'drink');\n          return meal\n            ? navigate.push(`/comidas/${id}/in-progress`)\n            : navigate.push(`/bebidas/${id}/in-progress`);\n        } }\n      >\n        {inProgress ? 'Continuar Receita' : 'Iniciar Receita'}\n      </button>\n    </div>\n  );\n};\n\n// Recipe.defaultProps = { alcoholic: null };\n\nRecipe.propTypes = {\n  id: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  instructions: PropTypes.string.isRequired,\n  youtube: PropTypes.string.isRequired,\n  alcoholic: PropTypes.string.isRequired,\n  meal: PropTypes.bool.isRequired,\n  commonProps: PropTypes.shape({\n    isMeal: PropTypes.bool.isRequired,\n    favorite: PropTypes.bool.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n};\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}