{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/Context/RecipesProvider.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './index';\nimport Meals from '../services/meals-api';\n\nfunction RecipesProvider({\n  children\n}) {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [categoryList, setCategoryList] = useState([]);\n  const [currentFilterCategory, setCurrentFilterCategory] = useState('All');\n  useEffect(() => {\n    setFilteredData(data);\n  }, [data]);\n\n  const handleClickCategory = async category => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setFilteredData(data);\n      return setCurrentFilterCategory('All');\n    }\n\n    if (currentFilterCategory !== category) {\n      const meals = await Meals.searchMealsByCategory(category, mealsAmountToShow);\n      setFilteredData(meals);\n      return setCurrentFilterCategory(category);\n    }\n\n    setFilteredData(data);\n    setCurrentFilterCategory('All');\n  };\n\n  const states = {\n    email: '',\n    data,\n    setData,\n    categoryList,\n    setCategoryList,\n    filteredData,\n    setFilteredData,\n    handleClickCategory\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: states,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default RecipesProvider;\nRecipesProvider.propTypes = {\n  children: PropTypes.element\n};\nRecipesProvider.defaultProps = {\n  children: PropTypes.element\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/Context/RecipesProvider.jsx"],"names":["React","useEffect","useState","PropTypes","RecipesContext","Meals","RecipesProvider","children","data","setData","filteredData","setFilteredData","categoryList","setCategoryList","currentFilterCategory","setCurrentFilterCategory","handleClickCategory","category","mealsAmountToShow","meals","searchMealsByCategory","states","email","propTypes","element","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,cAAP,MAA2B,SAA3B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,qBAAD,EAAwBC,wBAAxB,IAAoDb,QAAQ,CAAC,KAAD,CAAlE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,eAAe,CAACH,IAAD,CAAf;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMQ,mBAAmB,GAAG,MAAOC,QAAP,IAAoB;AAC9C,UAAMC,iBAAiB,GAAG,EAA1B;;AAEA,QAAID,QAAQ,KAAK,KAAjB,EAAwB;AACtBN,MAAAA,eAAe,CAACH,IAAD,CAAf;AACA,aAAOO,wBAAwB,CAAC,KAAD,CAA/B;AACD;;AAED,QAAID,qBAAqB,KAAKG,QAA9B,EAAwC;AACtC,YAAME,KAAK,GAAG,MAAMd,KAAK,CAACe,qBAAN,CAA4BH,QAA5B,EAAsCC,iBAAtC,CAApB;AACAP,MAAAA,eAAe,CAACQ,KAAD,CAAf;AACA,aAAOJ,wBAAwB,CAACE,QAAD,CAA/B;AACD;;AAEDN,IAAAA,eAAe,CAACH,IAAD,CAAf;AACAO,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACD,GAhBD;;AAkBA,QAAMM,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAE,EADM;AAEbd,IAAAA,IAFa;AAGbC,IAAAA,OAHa;AAIbG,IAAAA,YAJa;AAKbC,IAAAA,eALa;AAMbH,IAAAA,YANa;AAObC,IAAAA,eAPa;AAQbK,IAAAA;AARa,GAAf;AAWA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGK,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QADH,CADF;AAKD;;AAED,eAAeD,eAAf;AAEAA,eAAe,CAACiB,SAAhB,GAA4B;AAC1BhB,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB;AADM,CAA5B;AAIAlB,eAAe,CAACmB,YAAhB,GAA+B;AAC7BlB,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB;AADS,CAA/B","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RecipesContext from './index';\nimport Meals from '../services/meals-api';\n\nfunction RecipesProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [categoryList, setCategoryList] = useState([]);\n  const [currentFilterCategory, setCurrentFilterCategory] = useState('All');\n\n  useEffect(() => {\n    setFilteredData(data);\n  }, [data]);\n\n  const handleClickCategory = async (category) => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setFilteredData(data);\n      return setCurrentFilterCategory('All');\n    }\n\n    if (currentFilterCategory !== category) {\n      const meals = await Meals.searchMealsByCategory(category, mealsAmountToShow);\n      setFilteredData(meals);\n      return setCurrentFilterCategory(category);\n    }\n\n    setFilteredData(data);\n    setCurrentFilterCategory('All');\n  };\n\n  const states = {\n    email: '',\n    data,\n    setData,\n    categoryList,\n    setCategoryList,\n    filteredData,\n    setFilteredData,\n    handleClickCategory,\n  };\n\n  return (\n    <RecipesContext.Provider value={ states }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nexport default RecipesProvider;\n\nRecipesProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nRecipesProvider.defaultProps = {\n  children: PropTypes.element,\n};\n"]},"metadata":{},"sourceType":"module"}