{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/Context/RecipesProvider.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './index';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport Meals from '../services/meals-api';\nimport Drinks from '../services/cocktails-api';\n\nfunction RecipesProvider({\n  children\n}) {\n  const [mealsData, setMealsData] = useState([]);\n  const [mealsFilteredData, setMealsFilteredData] = useState([]);\n  const [mealsCategoryList, setMealsCategoryList] = useState([]);\n  const [currentFilterMealsCategory, setCurrentFilterMealsCategory] = useState('All');\n  const [drinksData, setDrinksData] = useState([]);\n  const [drinksFilteredData, setDrinksFilteredData] = useState([]);\n  const [drinksCategoryList, setDrinksCategoryList] = useState([]);\n  const [currentFilterDrinksCategory, setCurrentFilterDrinksCategory] = useState('All');\n  const [inProgressRecipes, setInProgressRecipes, favoriteRecipes, setFavoriteRecipes, doneRecipes] = useLocalStorage();\n  const [filteredDoneRecipes, setFilteredDoneRecipes] = useState([]);\n  const [filteredFavoriteRecipes, setFilteredFavoriteRecipes] = useState([]);\n  const [searchData, setSearchData] = useState('');\n  const [isSearchBarActive, setIsSearchBarActive] = useState(false);\n  useEffect(() => {\n    setMealsFilteredData(mealsData);\n  }, [mealsData]);\n  useEffect(() => {\n    setDrinksFilteredData(drinksData);\n  }, [drinksData]);\n  useEffect(() => {\n    setFilteredDoneRecipes(doneRecipes);\n  }, [doneRecipes]);\n  useEffect(() => {\n    setFilteredFavoriteRecipes(favoriteRecipes);\n  }, [favoriteRecipes]);\n\n  const checkFavorite = id => {\n    const foundRecipe = favoriteRecipes.find(recipe => recipe.id === id);\n    if (foundRecipe) return true;\n    return false;\n  };\n\n  const handleClickCategoryMeals = async category => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setMealsFilteredData(mealsData);\n      return setCurrentFilterMealsCategory('All');\n    }\n\n    if (currentFilterMealsCategory !== category) {\n      const meals = await Meals.searchMealsByCategory(category, mealsAmountToShow);\n      setMealsFilteredData(meals);\n      return setCurrentFilterMealsCategory(category);\n    }\n\n    setMealsFilteredData(mealsData);\n    setCurrentFilterMealsCategory('All');\n  };\n\n  const handleClickCategoryDrinks = async category => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setDrinksFilteredData(drinksData);\n      return setCurrentFilterDrinksCategory('All');\n    }\n\n    if (currentFilterDrinksCategory !== category) {\n      const drinks = await Drinks.searchCocktailsByCategory(category, mealsAmountToShow);\n      setDrinksFilteredData(drinks);\n      return setCurrentFilterDrinksCategory(category);\n    }\n\n    setDrinksFilteredData(drinksData);\n    setCurrentFilterDrinksCategory('All');\n  };\n\n  const verifyInProgress = (id, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n\n    if (inProgressRecipes[key]) {\n      const isInProgress = inProgressRecipes[key][id];\n      if (isInProgress) return true;\n    }\n\n    return false;\n  };\n\n  const handleClickFavorite = (recipe, type) => {\n    if (type === 'meal') {\n      const {\n        idMeal,\n        strArea,\n        strCategory,\n        strMeal,\n        strMealThumb\n      } = recipe;\n      const alreadyFavorite = checkFavorite(idMeal);\n\n      if (alreadyFavorite) {\n        const filteredFavoriteRecipes = favoriteRecipes.filter(({\n          id\n        }) => id !== idMeal);\n        return setFavoriteRecipes(filteredFavoriteRecipes);\n      }\n\n      const newFavorite = {\n        id: idMeal,\n        type: 'comida',\n        area: strArea,\n        category: strCategory,\n        alcoholicOrNot: '',\n        name: strMeal,\n        image: strMealThumb\n      };\n      return setFavoriteRecipes(state => [...state, newFavorite]);\n    }\n\n    const {\n      idDrink,\n      strCategory,\n      strAlcoholic,\n      strDrink,\n      strDrinkThumb\n    } = recipe;\n    const alreadyFavorite = checkFavorite(idDrink);\n\n    if (alreadyFavorite) {\n      const filteredFavoriteRecipes = favoriteRecipes.filter(({\n        id\n      }) => id !== idDrink);\n      return setFavoriteRecipes(filteredFavoriteRecipes);\n    }\n\n    const newFavorite = {\n      id: idDrink,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb\n    };\n    setFavoriteRecipes(state => [...state, newFavorite]);\n  };\n\n  const handleClickStartRecipe = (id, ingredients, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n    const isInProgress = verifyInProgress(id, page);\n\n    if (!isInProgress) {\n      setInProgressRecipes(state => ({ ...state,\n        [key]: { ...state[key],\n          [id]: ingredients\n        }\n      }));\n    }\n  };\n\n  const handleClickFilterRecipesMade = filter => {\n    if (!filter) return setFilteredDoneRecipes(doneRecipes);\n    const newFilteredRecipes = filteredDoneRecipes.filter(({\n      type\n    }) => type === filter);\n    setFilteredDoneRecipes(newFilteredRecipes);\n  };\n\n  const handleClickFilterFavoriteRecipes = filter => {\n    if (!filter) return setFilteredFavoriteRecipes(favoriteRecipes);\n    const newFilteredRecipes = filteredFavoriteRecipes.filter(({\n      type\n    }) => type === filter);\n    setFilteredFavoriteRecipes(newFilteredRecipes);\n  };\n\n  const states = {\n    filteredFavoriteRecipes,\n    handleClickFilterFavoriteRecipes,\n    filteredDoneRecipes,\n    handleClickFilterRecipesMade,\n    checkFavorite,\n    handleClickFavorite,\n    verifyInProgress,\n    handleClickStartRecipe,\n    email: '',\n    meal: {\n      mealsData,\n      setMealsData,\n      mealsCategoryList,\n      setMealsCategoryList,\n      mealsFilteredData,\n      setMealsFilteredData,\n      handleClickCategoryMeals\n    },\n    drink: {\n      drinksData,\n      setDrinksData,\n      drinksCategoryList,\n      setDrinksCategoryList,\n      drinksFilteredData,\n      setDrinksFilteredData,\n      handleClickCategoryDrinks\n    },\n    isSearchBarActive,\n    setIsSearchBarActive,\n    searchData,\n    setSearchData\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: states,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default RecipesProvider;\nRecipesProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/Context/RecipesProvider.jsx"],"names":["React","useEffect","useState","PropTypes","RecipesContext","useLocalStorage","Meals","Drinks","RecipesProvider","children","mealsData","setMealsData","mealsFilteredData","setMealsFilteredData","mealsCategoryList","setMealsCategoryList","currentFilterMealsCategory","setCurrentFilterMealsCategory","drinksData","setDrinksData","drinksFilteredData","setDrinksFilteredData","drinksCategoryList","setDrinksCategoryList","currentFilterDrinksCategory","setCurrentFilterDrinksCategory","inProgressRecipes","setInProgressRecipes","favoriteRecipes","setFavoriteRecipes","doneRecipes","filteredDoneRecipes","setFilteredDoneRecipes","filteredFavoriteRecipes","setFilteredFavoriteRecipes","searchData","setSearchData","isSearchBarActive","setIsSearchBarActive","checkFavorite","id","foundRecipe","find","recipe","handleClickCategoryMeals","category","mealsAmountToShow","meals","searchMealsByCategory","handleClickCategoryDrinks","drinks","searchCocktailsByCategory","verifyInProgress","page","key","isInProgress","handleClickFavorite","type","idMeal","strArea","strCategory","strMeal","strMealThumb","alreadyFavorite","filter","newFavorite","area","alcoholicOrNot","name","image","state","idDrink","strAlcoholic","strDrink","strDrinkThumb","handleClickStartRecipe","ingredients","handleClickFilterRecipesMade","newFilteredRecipes","handleClickFilterFavoriteRecipes","states","email","meal","drink","propTypes","element","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RecipesContext from './index';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport Meals from '../services/meals-api';\nimport Drinks from '../services/cocktails-api';\n\nfunction RecipesProvider({ children }) {\n  const [mealsData, setMealsData] = useState([]);\n  const [mealsFilteredData, setMealsFilteredData] = useState([]);\n  const [mealsCategoryList, setMealsCategoryList] = useState([]);\n  const [currentFilterMealsCategory, setCurrentFilterMealsCategory] = useState('All');\n\n  const [drinksData, setDrinksData] = useState([]);\n  const [drinksFilteredData, setDrinksFilteredData] = useState([]);\n  const [drinksCategoryList, setDrinksCategoryList] = useState([]);\n  const [currentFilterDrinksCategory, setCurrentFilterDrinksCategory] = useState('All');\n\n  const [\n    inProgressRecipes,\n    setInProgressRecipes,\n    favoriteRecipes,\n    setFavoriteRecipes,\n    doneRecipes,\n  ] = useLocalStorage();\n\n  const [filteredDoneRecipes, setFilteredDoneRecipes] = useState([]);\n  const [filteredFavoriteRecipes, setFilteredFavoriteRecipes] = useState([]);\n\n  const [searchData, setSearchData] = useState('');\n  const [isSearchBarActive, setIsSearchBarActive] = useState(false);\n\n  useEffect(() => { setMealsFilteredData(mealsData); }, [mealsData]);\n  useEffect(() => { setDrinksFilteredData(drinksData); }, [drinksData]);\n  useEffect(() => { setFilteredDoneRecipes(doneRecipes); }, [doneRecipes]);\n  useEffect(() => { setFilteredFavoriteRecipes(favoriteRecipes); }, [favoriteRecipes]);\n\n  const checkFavorite = (id) => {\n    const foundRecipe = favoriteRecipes.find((recipe) => recipe.id === id);\n\n    if (foundRecipe) return true;\n    return false;\n  };\n\n  const handleClickCategoryMeals = async (category) => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setMealsFilteredData(mealsData);\n      return setCurrentFilterMealsCategory('All');\n    }\n\n    if (currentFilterMealsCategory !== category) {\n      const meals = await Meals.searchMealsByCategory(category, mealsAmountToShow);\n      setMealsFilteredData(meals);\n      return setCurrentFilterMealsCategory(category);\n    }\n    setMealsFilteredData(mealsData);\n    setCurrentFilterMealsCategory('All');\n  };\n\n  const handleClickCategoryDrinks = async (category) => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setDrinksFilteredData(drinksData);\n      return setCurrentFilterDrinksCategory('All');\n    }\n\n    if (currentFilterDrinksCategory !== category) {\n      const drinks = await Drinks.searchCocktailsByCategory(category, mealsAmountToShow);\n      setDrinksFilteredData(drinks);\n      return setCurrentFilterDrinksCategory(category);\n    }\n    setDrinksFilteredData(drinksData);\n    setCurrentFilterDrinksCategory('All');\n  };\n\n  const verifyInProgress = (id, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n\n    if (inProgressRecipes[key]) {\n      const isInProgress = inProgressRecipes[key][id];\n      if (isInProgress) return true;\n    }\n    return false;\n  };\n\n  const handleClickFavorite = (recipe, type) => {\n    if (type === 'meal') {\n      const { idMeal, strArea, strCategory, strMeal, strMealThumb } = recipe;\n\n      const alreadyFavorite = checkFavorite(idMeal);\n      if (alreadyFavorite) {\n        const filteredFavoriteRecipes = favoriteRecipes.filter(({ id }) => id !== idMeal);\n        return setFavoriteRecipes(filteredFavoriteRecipes);\n      }\n\n      const newFavorite = {\n        id: idMeal,\n        type: 'comida',\n        area: strArea,\n        category: strCategory,\n        alcoholicOrNot: '',\n        name: strMeal,\n        image: strMealThumb,\n      };\n\n      return setFavoriteRecipes((state) => [...state, newFavorite]);\n    }\n\n    const { idDrink, strCategory, strAlcoholic, strDrink, strDrinkThumb } = recipe;\n\n    const alreadyFavorite = checkFavorite(idDrink);\n\n    if (alreadyFavorite) {\n      const filteredFavoriteRecipes = favoriteRecipes.filter(({ id }) => id !== idDrink);\n      return setFavoriteRecipes(filteredFavoriteRecipes);\n    }\n\n    const newFavorite = {\n      id: idDrink,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n    };\n\n    setFavoriteRecipes((state) => [...state, newFavorite]);\n  };\n\n  const handleClickStartRecipe = (id, ingredients, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n\n    const isInProgress = verifyInProgress(id, page);\n    if (!isInProgress) {\n      setInProgressRecipes((state) => ({\n        ...state, [key]: { ...state[key], [id]: ingredients },\n      }));\n    }\n  };\n\n  const handleClickFilterRecipesMade = (filter) => {\n    if (!filter) return setFilteredDoneRecipes(doneRecipes);\n\n    const newFilteredRecipes = filteredDoneRecipes.filter(({ type }) => type === filter);\n    setFilteredDoneRecipes(newFilteredRecipes);\n  };\n\n  const handleClickFilterFavoriteRecipes = (filter) => {\n    if (!filter) return setFilteredFavoriteRecipes(favoriteRecipes);\n\n    const newFilteredRecipes = filteredFavoriteRecipes\n      .filter(({ type }) => type === filter);\n\n    setFilteredFavoriteRecipes(newFilteredRecipes);\n  };\n\n  const states = {\n    filteredFavoriteRecipes,\n    handleClickFilterFavoriteRecipes,\n    filteredDoneRecipes,\n    handleClickFilterRecipesMade,\n    checkFavorite,\n    handleClickFavorite,\n    verifyInProgress,\n    handleClickStartRecipe,\n    email: '',\n    meal: {\n      mealsData,\n      setMealsData,\n      mealsCategoryList,\n      setMealsCategoryList,\n      mealsFilteredData,\n      setMealsFilteredData,\n      handleClickCategoryMeals,\n    },\n    drink: {\n      drinksData,\n      setDrinksData,\n      drinksCategoryList,\n      setDrinksCategoryList,\n      drinksFilteredData,\n      setDrinksFilteredData,\n      handleClickCategoryDrinks,\n    },\n    isSearchBarActive,\n    setIsSearchBarActive,\n    searchData,\n    setSearchData,\n  };\n\n  return (\n    <RecipesContext.Provider value={ states }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nexport default RecipesProvider;\n\nRecipesProvider.propTypes = { children: PropTypes.element.isRequired };\n"]},"metadata":{},"sourceType":"module"}