{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/RecipeProgress/RecipeToProgress.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // import YouTube from 'react-youtube';\n\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport Context from '../../Context'; // import Recommendation from '../Recommendation';\n\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\"; // const getYouTubeVideoId = (url) => {\n//   if (!url) return 'MAiyzmLhIEw';\n//   const start = url.split('').findIndex((char) => char === '=');\n//   const videoId = url.slice(start + 1);\n//   return videoId;\n// };\n\nconst RecipeToProgress = ({\n  recipe,\n  commonProps\n}) => {\n  const navigate = useHistory();\n  const {\n    handleClickStartRecipe,\n    handleClickFavorite\n  } = useContext(Context);\n  const btnvalue = 'Finalizar Receita';\n  const [copied, setCopied] = useState(false);\n  const {\n    page,\n    favorite,\n    ingredients,\n    measures,\n    inProgress,\n    meals,\n    drinks,\n    id\n  } = commonProps;\n  const pathFood = `http://localhost:3000/comidas/${id}`;\n  const pathDrink = `http://localhost:3000/bebidas/${id}`;\n\n  const handleClickShare = path => {\n    copy(path).then(() => setCopied(true)).catch(err => console.log(err));\n  };\n\n  const streakIngredient = (key, event) => {\n    console.log(key, event);\n    const {\n      target\n    } = event;\n    const element = document.getElementById(key);\n\n    if (target.checked === true && element.style.textDecoration !== 'line-through') {\n      element.style.textDecoration = 'line-through';\n    }\n\n    if (target.checked === false && element.style.textDecoration === 'line-through') {\n      element.style.textDecoration = '';\n    }\n  };\n\n  const verifyCheckbox = () => {\n    const checked = document.querySelectorAll('input:checked');\n    const tr = true;\n    const fal = false;\n\n    if (checked.length === ingredients.length) {\n      console.log('passou');\n    }\n  };\n\n  verifyCheckbox();\n\n  if (page === 'meal') {\n    const {\n      strMealThumb,\n      strMeal,\n      strCategory,\n      strInstructions,\n      strYoutube\n    } = recipe;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: strMealThumb,\n      width: \"150\",\n      alt: \"meal\",\n      \"data-testid\": \"recipe-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, strMeal), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, strCategory), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"share-btn\",\n      onClick: () => handleClickShare(pathFood),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"share icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => handleClickFavorite(recipe, page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: favorite ? blackHeartIcon : whiteHeartIcon,\n      alt: \"favorite icon\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }))), copied && 'Link copiado!', /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": `${index}-ingredient-step`,\n      key: `${ing}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => streakIngredient(`${ing}-${index}`, event),\n      \"data-testid\": \"ingredient-search-radio\",\n      type: \"checkbox\",\n      value: ing,\n      name: ing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), ' ', /*#__PURE__*/React.createElement(\"p\", {\n      id: `${ing}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, ing)))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"start-button\",\n      type: \"button\",\n      disabled: true,\n      \"data-testid\": \"finish-recipe-btn\",\n      onClick: () => {\n        handleClickStartRecipe(id, ingredients, page);\n        navigate.push('/bebidas/receitas-feitas');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, inProgress ? btnvalue : btnvalue));\n  }\n\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic\n  } = recipe;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    width: \"150\",\n    alt: \"meal\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, strAlcoholic === 'Alcoholic' ? 'Alcoholic' : strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    onClick: () => handleClickShare(pathDrink),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"share icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleClickFavorite(recipe, page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: favorite ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favorite icon\",\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }))), copied && 'Link copiado!', /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-ingredient-step`,\n    key: `${ing}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => streakIngredient(`${ing}-${index}`, event),\n    \"data-testid\": \"ingredient-search-radio\",\n    type: \"checkbox\",\n    value: ing,\n    name: ing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"p\", {\n    id: `${ing}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, ing)))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button\",\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: true,\n    onClick: () => {\n      handleClickStartRecipe(id, ingredients, page);\n      navigate.push('/bebidas/receitas-feitas');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, inProgress ? btnvalue : btnvalue));\n};\n\nRecipeToProgress.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  commonProps: PropTypes.shape({\n    page: PropTypes.string.isRequired,\n    favorite: PropTypes.bool.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default RecipeToProgress;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/RecipeProgress/RecipeToProgress.jsx"],"names":["React","useContext","useState","useHistory","copy","PropTypes","Context","RecipeToProgress","recipe","commonProps","navigate","handleClickStartRecipe","handleClickFavorite","btnvalue","copied","setCopied","page","favorite","ingredients","measures","inProgress","meals","drinks","id","pathFood","pathDrink","handleClickShare","path","then","catch","err","console","log","streakIngredient","key","event","target","element","document","getElementById","checked","style","textDecoration","verifyCheckbox","querySelectorAll","tr","fal","length","strMealThumb","strMeal","strCategory","strInstructions","strYoutube","shareIcon","blackHeartIcon","whiteHeartIcon","map","ing","index","push","strDrinkThumb","strDrink","strAlcoholic","propTypes","objectOf","string","isRequired","shape","bool","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// import YouTube from 'react-youtube';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\n\nimport Context from '../../Context';\n// import Recommendation from '../Recommendation';\n\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\n// const getYouTubeVideoId = (url) => {\n//   if (!url) return 'MAiyzmLhIEw';\n\n//   const start = url.split('').findIndex((char) => char === '=');\n//   const videoId = url.slice(start + 1);\n\n//   return videoId;\n// };\n\nconst RecipeToProgress = ({ recipe, commonProps }) => {\n  const navigate = useHistory();\n  const { handleClickStartRecipe, handleClickFavorite } = useContext(Context);\n  const btnvalue = 'Finalizar Receita';\n  const [copied, setCopied] = useState(false);\n\n  const {\n    page, favorite, ingredients, measures, inProgress, meals, drinks, id,\n  } = commonProps;\n  const pathFood = `http://localhost:3000/comidas/${id}`;\n  const pathDrink = `http://localhost:3000/bebidas/${id}`;\n  const handleClickShare = (path) => {\n    copy(path)\n      .then(() => setCopied(true))\n      .catch((err) => console.log(err));\n  };\n  const streakIngredient = (key, event) => {\n    console.log(key, event);\n    const { target } = event;\n    const element = document.getElementById(key);\n\n    if (target.checked === true && element.style.textDecoration !== 'line-through') {\n      element.style.textDecoration = 'line-through';\n    }\n    if (target.checked === false && element.style.textDecoration === 'line-through') {\n      element.style.textDecoration = '';\n    }\n  };\n  const verifyCheckbox = () => {\n    const checked = document.querySelectorAll('input:checked');\n    const tr = true;\n    const fal = false;\n\n    if (checked.length === ingredients.length) {\n      console.log('passou');\n    }\n  };\n  verifyCheckbox();\n  if (page === 'meal') {\n    const { strMealThumb, strMeal, strCategory, strInstructions, strYoutube } = recipe;\n\n    return (\n      <div>\n        <img src={ strMealThumb } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n        <h1 data-testid=\"recipe-title\">{strMeal}</h1>\n        <h3 data-testid=\"recipe-category\">{strCategory}</h3>\n\n        <div>\n          <button\n            type=\"button\"\n            data-testid=\"share-btn\"\n            onClick={ () => handleClickShare(pathFood) }\n          >\n            <img src={ shareIcon } alt=\"share icon\" />\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={ () => handleClickFavorite(recipe, page) }\n          >\n\n            <img\n              src={ favorite ? blackHeartIcon : whiteHeartIcon }\n              alt=\"favorite icon\"\n              data-testid=\"favorite-btn\"\n            />\n          </button>\n        </div>\n        { copied && 'Link copiado!' }\n\n        <h2>Ingredients</h2>\n        <div>\n          {\n            ingredients.map((ing, index) => (\n              <div\n                data-testid={ `${index}-ingredient-step` }\n                key={ `${ing}-${index}` }\n              >\n                <input\n                  onChange={ (event) => streakIngredient(`${ing}-${index}`, event) }\n                  data-testid=\"ingredient-search-radio\"\n                  type=\"checkbox\"\n                  value={ ing }\n                  name={ ing }\n\n                />\n                {' '}\n                <p id={ `${ing}-${index}` }>{ing}</p>\n              </div>\n            ))\n          }\n        </div>\n\n        <h2>Instructions</h2>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n\n        <button\n          className=\"start-button\"\n          type=\"button\"\n          disabled\n          data-testid=\"finish-recipe-btn\"\n          onClick={ () => {\n            handleClickStartRecipe(id, ingredients, page);\n            navigate.push('/bebidas/receitas-feitas');\n          } }\n        >\n          {inProgress ? btnvalue : btnvalue}\n        </button>\n      </div>\n    );\n  }\n\n  const { strDrinkThumb, strDrink, strCategory, strInstructions, strAlcoholic } = recipe;\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n      <h1 data-testid=\"recipe-title\">{strDrink}</h1>\n      <h3 data-testid=\"recipe-category\">\n        {strAlcoholic === 'Alcoholic' ? 'Alcoholic' : strCategory}\n      </h3>\n\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"share-btn\"\n          onClick={ () => handleClickShare(pathDrink) }\n        >\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={ () => handleClickFavorite(recipe, page) }\n        >\n          <img\n            src={ favorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"favorite icon\"\n            data-testid=\"favorite-btn\"\n          />\n        </button>\n      </div>\n      { copied && 'Link copiado!' }\n\n      <h2>Ingredients</h2>\n      <div>\n        {\n          ingredients.map((ing, index) => (\n            <div\n              data-testid={ `${index}-ingredient-step` }\n              key={ `${ing}-${index}` }\n            >\n              <input\n                onChange={ (event) => streakIngredient(`${ing}-${index}`, event) }\n                data-testid=\"ingredient-search-radio\"\n                type=\"checkbox\"\n                value={ ing }\n                name={ ing }\n              />\n              {' '}\n              <p id={ `${ing}-${index}` }>{ing}</p>\n            </div>\n\n          ))\n        }\n      </div>\n\n      <h2>Instructions</h2>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n\n      <button\n        className=\"start-button\"\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled\n        onClick={ () => {\n          handleClickStartRecipe(id, ingredients, page);\n          navigate.push('/bebidas/receitas-feitas');\n        } }\n      >\n        { inProgress ? btnvalue : btnvalue }\n      </button>\n\n    </div>\n  );\n};\n\nRecipeToProgress.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  commonProps: PropTypes.shape({\n    page: PropTypes.string.isRequired,\n    favorite: PropTypes.bool.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default RecipeToProgress;\n"]},"metadata":{},"sourceType":"module"}