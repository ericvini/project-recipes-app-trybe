{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/Grid/index.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport Context from '../../Context';\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\n\nconst Grid = ({\n  page\n}) => {\n  const {\n    mealsData,\n    setMealsData,\n    mealsCategoryList,\n    setMealsCategoryList,\n    mealsFilteredData,\n    handleClickCategoryMeals\n  } = useContext(Context).meal;\n  const {\n    drinksData,\n    setDrinksData,\n    drinksCategoryList,\n    setDrinksCategoryList,\n    drinksFilteredData,\n    handleClickCategoryDrinks\n  } = useContext(Context).drink;\n  useEffect(() => {\n    const mealsAmountToShow = 12;\n\n    if (page === 'meals') {\n      Meals.getMeals(mealsAmountToShow).then(res => setMealsData(res)).catch(err => console.log(err));\n    }\n\n    if (page === 'drinks') {\n      Drinks.getCocktails(mealsAmountToShow).then(res => setDrinksData(res)).catch(err => console.log(err));\n    }\n  }, [page, setMealsData, setDrinksData]);\n  useEffect(() => {\n    const categoriesAmountToShow = 5;\n\n    if (page === 'meals') {\n      Meals.getMealCategoryList(categoriesAmountToShow).then(res => setMealsCategoryList(res)).catch(err => console.log(err));\n    }\n\n    if (page === 'drinks') {\n      Drinks.getCocktailCategoryList(categoriesAmountToShow).then(res => setDrinksCategoryList(res)).catch(err => console.log(err));\n    }\n  }, [page, setMealsCategoryList, setDrinksCategoryList]);\n\n  const loadingData = () => {\n    if (page === 'meals') {\n      return mealsData.length || mealsCategoryList.length;\n    }\n\n    return drinksData.length || drinksCategoryList.length;\n  };\n\n  if (!loadingData()) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, \"Loading meals...\");\n  }\n\n  if (page === 'meals') {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/bebidas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Bebidas\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"All-category-filter\",\n      onClick: () => handleClickCategoryMeals('All'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"All\"), mealsCategoryList.map(({\n      strCategory\n    }) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: strCategory,\n      \"data-testid\": `${strCategory}-category-filter`,\n      onClick: () => handleClickCategoryMeals(strCategory),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, strCategory))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, mealsFilteredData.map(({\n      idMeal,\n      strMeal,\n      strMealThumb\n    }, index) => /*#__PURE__*/React.createElement(Link, {\n      to: `/comidas/${idMeal}`,\n      key: idMeal,\n      \"data-testid\": `${index}-recipe-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"recipe-img\",\n      width: \"150\",\n      src: strMealThumb,\n      alt: \"meal\",\n      \"data-testid\": `${index}-card-img`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": `${index}-card-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, strMeal)))));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/comidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Comidas\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: () => handleClickCategoryDrinks('All'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"All\"), drinksCategoryList.map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    key: strCategory,\n    \"data-testid\": `${strCategory}-category-filter`,\n    onClick: () => handleClickCategoryDrinks(strCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, strCategory))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, drinksFilteredData.map(({\n    idDrink,\n    strDrink,\n    strDrinkThumb\n  }, index) => /*#__PURE__*/React.createElement(Link, {\n    to: `/bebidas/${idDrink}`,\n    key: idDrink,\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"recipe-img\",\n    width: \"150\",\n    src: strDrinkThumb,\n    alt: \"drink\",\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, strDrink)))));\n};\n\nGrid.propTypes = {\n  page: PropTypes.string.isRequired\n};\nexport default Grid;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/Grid/index.jsx"],"names":["React","useContext","useEffect","Link","PropTypes","Context","Meals","Drinks","Grid","page","mealsData","setMealsData","mealsCategoryList","setMealsCategoryList","mealsFilteredData","handleClickCategoryMeals","meal","drinksData","setDrinksData","drinksCategoryList","setDrinksCategoryList","drinksFilteredData","handleClickCategoryDrinks","drink","mealsAmountToShow","getMeals","then","res","catch","err","console","log","getCocktails","categoriesAmountToShow","getMealCategoryList","getCocktailCategoryList","loadingData","length","map","strCategory","idMeal","strMeal","strMealThumb","index","idDrink","strDrink","strDrinkThumb","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,aAAP;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,oBAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA;AANI,MAOFd,UAAU,CAACI,OAAD,CAAV,CAAoBW,IAPxB;AAQA,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,qBAJI;AAKJC,IAAAA,kBALI;AAMJC,IAAAA;AANI,MAOFrB,UAAU,CAACI,OAAD,CAAV,CAAoBkB,KAPxB;AASArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,iBAAiB,GAAG,EAA1B;;AAEA,QAAIf,IAAI,KAAK,OAAb,EAAsB;AACpBH,MAAAA,KAAK,CAACmB,QAAN,CAAeD,iBAAf,EACGE,IADH,CACSC,GAAD,IAAShB,YAAY,CAACgB,GAAD,CAD7B,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;;AAED,QAAIpB,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,MAAM,CAACyB,YAAP,CAAoBR,iBAApB,EACGE,IADH,CACSC,GAAD,IAAST,aAAa,CAACS,GAAD,CAD9B,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;AACF,GAdQ,EAcN,CAACpB,IAAD,EAAOE,YAAP,EAAqBO,aAArB,CAdM,CAAT;AAgBAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+B,sBAAsB,GAAG,CAA/B;;AAEA,QAAIxB,IAAI,KAAK,OAAb,EAAsB;AACpBH,MAAAA,KAAK,CAAC4B,mBAAN,CAA0BD,sBAA1B,EACGP,IADH,CACSC,GAAD,IAASd,oBAAoB,CAACc,GAAD,CADrC,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;;AAED,QAAIpB,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,MAAM,CAAC4B,uBAAP,CAA+BF,sBAA/B,EACGP,IADH,CACSC,GAAD,IAASP,qBAAqB,CAACO,GAAD,CADtC,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;AACF,GAdQ,EAcN,CAACpB,IAAD,EAAOI,oBAAP,EAA6BO,qBAA7B,CAdM,CAAT;;AAgBA,QAAMgB,WAAW,GAAG,MAAM;AACxB,QAAI3B,IAAI,KAAK,OAAb,EAAsB;AACpB,aAAOC,SAAS,CAAC2B,MAAV,IAAoBzB,iBAAiB,CAACyB,MAA7C;AACD;;AAED,WAAOpB,UAAU,CAACoB,MAAX,IAAqBlB,kBAAkB,CAACkB,MAA/C;AACD,GAND;;AAQA,MAAI,CAACD,WAAW,EAAhB,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AAED,MAAI3B,IAAI,KAAK,OAAb,EAAsB;AACpB,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAGE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,qBAFd;AAGE,MAAA,OAAO,EAAG,MAAMM,wBAAwB,CAAC,KAAD,CAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAWIH,iBAAiB,CAAC0B,GAAlB,CAAsB,CAAC;AAAEC,MAAAA;AAAF,KAAD,kBACpB;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,GAAG,EAAGA,WAFR;AAGE,qBAAe,GAAEA,WAAY,kBAH/B;AAIE,MAAA,OAAO,EAAG,MAAMxB,wBAAwB,CAACwB,WAAD,CAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMIA,WANJ,CADF,CAXJ,CADF,eAwBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIzB,iBAAiB,CAACwB,GAAlB,CAAsB,CAAC;AAAEE,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,KAAD,EAAoCC,KAApC,kBACpB,oBAAC,IAAD;AACE,MAAA,EAAE,EAAI,YAAWH,MAAO,EAD1B;AAEE,MAAA,GAAG,EAAGA,MAFR;AAGE,qBAAe,GAAEG,KAAM,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,GAAG,EAAGD,YAHR;AAIE,MAAA,GAAG,EAAC,MAJN;AAKE,qBAAe,GAAEC,KAAM,WALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAYE;AAAI,qBAAe,GAAEA,KAAM,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OADH,CAZF,CADF,CAFJ,CAxBF,CADF;AAiDD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,qBAFd;AAGE,IAAA,OAAO,EAAG,MAAMnB,yBAAyB,CAAC,KAAD,CAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAWIH,kBAAkB,CAACmB,GAAnB,CAAuB,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACrB;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,GAAG,EAAGA,WAFR;AAGE,mBAAe,GAAEA,WAAY,kBAH/B;AAIE,IAAA,OAAO,EAAG,MAAMjB,yBAAyB,CAACiB,WAAD,CAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIA,WANJ,CADF,CAXJ,CADF,eAwBE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIlB,kBAAkB,CAACiB,GAAnB,CAAuB,CAAC;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAAD,EAAuCH,KAAvC,kBACrB,oBAAC,IAAD;AACE,IAAA,EAAE,EAAI,YAAWC,OAAQ,EAD3B;AAEE,IAAA,GAAG,EAAGA,OAFR;AAGE,mBAAe,GAAED,KAAM,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,GAAG,EAAGG,aAHR;AAIE,IAAA,GAAG,EAAC,OAJN;AAKE,mBAAe,GAAEH,KAAM,WALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAYE;AAAI,mBAAe,GAAEA,KAAM,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QADH,CAZF,CADF,CAFJ,CAxBF,CADF;AAiDD,CAnKD;;AAqKArC,IAAI,CAACuC,SAAL,GAAiB;AAAEtC,EAAAA,IAAI,EAAEL,SAAS,CAAC4C,MAAV,CAAiBC;AAAzB,CAAjB;AAEA,eAAezC,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nimport Context from '../../Context';\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\n\nconst Grid = ({ page }) => {\n  const {\n    mealsData,\n    setMealsData,\n    mealsCategoryList,\n    setMealsCategoryList,\n    mealsFilteredData,\n    handleClickCategoryMeals,\n  } = useContext(Context).meal;\n  const {\n    drinksData,\n    setDrinksData,\n    drinksCategoryList,\n    setDrinksCategoryList,\n    drinksFilteredData,\n    handleClickCategoryDrinks,\n  } = useContext(Context).drink;\n\n  useEffect(() => {\n    const mealsAmountToShow = 12;\n\n    if (page === 'meals') {\n      Meals.getMeals(mealsAmountToShow)\n        .then((res) => setMealsData(res))\n        .catch((err) => console.log(err));\n    }\n\n    if (page === 'drinks') {\n      Drinks.getCocktails(mealsAmountToShow)\n        .then((res) => setDrinksData(res))\n        .catch((err) => console.log(err));\n    }\n  }, [page, setMealsData, setDrinksData]);\n\n  useEffect(() => {\n    const categoriesAmountToShow = 5;\n\n    if (page === 'meals') {\n      Meals.getMealCategoryList(categoriesAmountToShow)\n        .then((res) => setMealsCategoryList(res))\n        .catch((err) => console.log(err));\n    }\n\n    if (page === 'drinks') {\n      Drinks.getCocktailCategoryList(categoriesAmountToShow)\n        .then((res) => setDrinksCategoryList(res))\n        .catch((err) => console.log(err));\n    }\n  }, [page, setMealsCategoryList, setDrinksCategoryList]);\n\n  const loadingData = () => {\n    if (page === 'meals') {\n      return mealsData.length || mealsCategoryList.length;\n    }\n\n    return drinksData.length || drinksCategoryList.length;\n  };\n\n  if (!loadingData()) {\n    return <h1>Loading meals...</h1>;\n  }\n\n  if (page === 'meals') {\n    return (\n      <>\n        <div>\n          <Link to=\"/bebidas\">Bebidas</Link>\n\n          <button\n            type=\"button\"\n            data-testid=\"All-category-filter\"\n            onClick={ () => handleClickCategoryMeals('All') }\n          >\n            All\n          </button>\n          {\n            mealsCategoryList.map(({ strCategory }) => (\n              <button\n                type=\"button\"\n                key={ strCategory }\n                data-testid={ `${strCategory}-category-filter` }\n                onClick={ () => handleClickCategoryMeals(strCategory) }\n              >\n                { strCategory}\n              </button>\n            ))\n          }\n        </div>\n        <div className=\"grid-list\">\n          {\n            mealsFilteredData.map(({ idMeal, strMeal, strMealThumb }, index) => (\n              <Link\n                to={ `/comidas/${idMeal}` }\n                key={ idMeal }\n                data-testid={ `${index}-recipe-card` }\n              >\n                <img\n                  className=\"recipe-img\"\n                  width=\"150\"\n                  src={ strMealThumb }\n                  alt=\"meal\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <h2 data-testid={ `${index}-card-name` }>\n                  {strMeal}\n                </h2>\n              </Link>\n            ))\n          }\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div>\n        <Link to=\"/comidas\">Comidas</Link>\n\n        <button\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ () => handleClickCategoryDrinks('All') }\n        >\n          All\n        </button>\n        {\n          drinksCategoryList.map(({ strCategory }) => (\n            <button\n              type=\"button\"\n              key={ strCategory }\n              data-testid={ `${strCategory}-category-filter` }\n              onClick={ () => handleClickCategoryDrinks(strCategory) }\n            >\n              { strCategory}\n            </button>\n          ))\n        }\n      </div>\n      <div className=\"grid-list\">\n        {\n          drinksFilteredData.map(({ idDrink, strDrink, strDrinkThumb }, index) => (\n            <Link\n              to={ `/bebidas/${idDrink}` }\n              key={ idDrink }\n              data-testid={ `${index}-recipe-card` }\n            >\n              <img\n                className=\"recipe-img\"\n                width=\"150\"\n                src={ strDrinkThumb }\n                alt=\"drink\"\n                data-testid={ `${index}-card-img` }\n              />\n              <h2 data-testid={ `${index}-card-name` }>\n                {strDrink}\n              </h2>\n            </Link>\n          ))\n        }\n      </div>\n    </>\n  );\n};\n\nGrid.propTypes = { page: PropTypes.string.isRequired };\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}