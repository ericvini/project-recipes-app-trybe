{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/Ingredients/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\n\nconst Ingredients = ({\n  meal\n}) => {\n  const [ingredientList, setIngredientList] = useState([]);\n  useEffect(() => {\n    const amountToShow = 12;\n\n    if (meal) {\n      Meals.getMealIngredientList(amountToShow).then(res => setIngredientList(res)).catch(err => console.log(err));\n    }\n\n    if (!meal) {\n      Drinks.getCocktailIngredientList(amountToShow).then(res => setIngredientList(res)).catch(err => console.log(err));\n    }\n  }, [meal]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, ingredientList.map((ingredient, index) => {\n    const name = ingredient.strIngredient || ingredient.strIngredient1;\n    return /*#__PURE__*/React.createElement(Link, {\n      to: meal ? `/comidas?ing=${name}` : `/bebidas?ing=${name}`,\n      key: name,\n      \"data-testid\": `${index}-ingredient-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: meal ? `https://www.themealdb.com/images/ingredients/${name}-Small.png` : `https://www.thecocktaildb.com/images/ingredients/${name}-Small.png`,\n      width: \"150\",\n      alt: \"ingredient\",\n      \"data-testid\": `${index}-card-img`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": `${index}-card-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, name));\n  }));\n};\n\nIngredients.propTypes = {\n  meal: PropTypes.bool.isRequired\n};\nexport default Ingredients;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/Ingredients/index.jsx"],"names":["React","useEffect","useState","PropTypes","Link","Meals","Drinks","Ingredients","meal","ingredientList","setIngredientList","amountToShow","getMealIngredientList","then","res","catch","err","console","log","getCocktailIngredientList","map","ingredient","index","name","strIngredient","strIngredient1","propTypes","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,aAAP;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,YAAY,GAAG,EAArB;;AACA,QAAIH,IAAJ,EAAU;AACRH,MAAAA,KAAK,CAACO,qBAAN,CAA4BD,YAA5B,EACGE,IADH,CACSC,GAAD,IAASJ,iBAAiB,CAACI,GAAD,CADlC,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;;AAED,QAAI,CAACR,IAAL,EAAW;AACTF,MAAAA,MAAM,CAACa,yBAAP,CAAiCR,YAAjC,EACGE,IADH,CACSC,GAAD,IAASJ,iBAAiB,CAACI,GAAD,CADlC,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;AACF,GAbQ,EAaN,CAACR,IAAD,CAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,cAAc,CAACW,GAAf,CAAmB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACxC,UAAMC,IAAI,GAAGF,UAAU,CAACG,aAAX,IAA4BH,UAAU,CAACI,cAApD;AACA,wBACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAGjB,IAAI,GAAI,gBAAee,IAAK,EAAxB,GAA6B,gBAAeA,IAAK,EAD5D;AAEE,MAAA,GAAG,EAAGA,IAFR;AAGE,qBAAe,GAAED,KAAM,kBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,GAAG,EACDd,IAAI,GACC,gDAA+Ce,IAAK,YADrD,GAEC,oDAAmDA,IAAK,YAJjE;AAME,MAAA,KAAK,EAAC,KANR;AAOE,MAAA,GAAG,EAAC,YAPN;AAQE,qBAAe,GAAED,KAAM,WARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAeE;AAAI,qBAAe,GAAEA,KAAM,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IADH,CAfF,CADF;AAqBD,GAvBD,CAFJ,CADF;AA8BD,CAhDD;;AAkDAhB,WAAW,CAACmB,SAAZ,GAAwB;AAAElB,EAAAA,IAAI,EAAEL,SAAS,CAACwB,IAAV,CAAeC;AAAvB,CAAxB;AAEA,eAAerB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\n\nconst Ingredients = ({ meal }) => {\n  const [ingredientList, setIngredientList] = useState([]);\n\n  useEffect(() => {\n    const amountToShow = 12;\n    if (meal) {\n      Meals.getMealIngredientList(amountToShow)\n        .then((res) => setIngredientList(res))\n        .catch((err) => console.log(err));\n    }\n\n    if (!meal) {\n      Drinks.getCocktailIngredientList(amountToShow)\n        .then((res) => setIngredientList(res))\n        .catch((err) => console.log(err));\n    }\n  }, [meal]);\n\n  return (\n    <div className=\"ingredient-list\">\n      {\n        ingredientList.map((ingredient, index) => {\n          const name = ingredient.strIngredient || ingredient.strIngredient1;\n          return (\n            <Link\n              to={ meal ? `/comidas?ing=${name}` : `/bebidas?ing=${name}` }\n              key={ name }\n              data-testid={ `${index}-ingredient-card` }\n            >\n              <img\n                src={\n                  meal\n                    ? `https://www.themealdb.com/images/ingredients/${name}-Small.png`\n                    : `https://www.thecocktaildb.com/images/ingredients/${name}-Small.png`\n                }\n                width=\"150\"\n                alt=\"ingredient\"\n                data-testid={ `${index}-card-img` }\n              />\n              <h1 data-testid={ `${index}-card-name` }>\n                {name}\n              </h1>\n            </Link>\n          );\n        })\n      }\n    </div>\n  );\n};\n\nIngredients.propTypes = { meal: PropTypes.bool.isRequired };\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}