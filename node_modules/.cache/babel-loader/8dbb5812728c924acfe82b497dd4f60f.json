{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/RecipeProgress/RecipeToProgress.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport funcsRecipes from './functionsRecipeToProgress';\nimport Context from '../../Context';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\n\nconst RecipeToProgress = ({\n  id,\n  area,\n  image,\n  name,\n  category,\n  instructions,\n  youtube,\n  alcoholic,\n  meal,\n  commonProps\n}) => {\n  const navigate = useHistory();\n  const {\n    handleClickStartRecipe,\n    handleClickFavorite\n  } = useContext(Context);\n  const {\n    favorite,\n    ingredients,\n    inProgress\n  } = commonProps;\n  const btnvalue = 'Finalizar Receita';\n  const [copied, setCopied] = useState(false);\n  const [check, setCheck] = useState(true);\n  const pathFood = `http://localhost:3000/comidas/${id}`;\n  const pathDrink = `http://localhost:3000/bebidas/${id}`;\n\n  const handleClickShare = path => {\n    copy(path).then(() => setCopied(true)).catch(err => console.log(err));\n  };\n\n  const verifyCheckbox = () => {\n    const checked = document.querySelectorAll('input:checked').length;\n    console.log(checked);\n    console.log(ingredients.length);\n\n    if (checked === ingredients.length) {\n      console.log('passou');\n      setCheck(false);\n    }\n  };\n\n  const onClickFavorite = () => {\n    if (meal) {\n      const recipe = {\n        id,\n        area,\n        category,\n        name,\n        image\n      };\n      return handleClickFavorite(recipe, meal);\n    }\n\n    const recipe = {\n      id,\n      category,\n      alcoholic,\n      name,\n      image\n    };\n    handleClickFavorite(recipe);\n  };\n\n  if (page === 'meal') {\n    const {\n      strMealThumb,\n      strMeal,\n      strCategory,\n      strInstructions\n    } = recipe;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: strMealThumb,\n      width: \"150\",\n      alt: \"meal\",\n      \"data-testid\": \"recipe-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, strMeal), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, strCategory), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"share-btn\",\n      onClick: () => handleClickShare(pathFood),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"share icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onClickFavorite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: favorite ? blackHeartIcon : whiteHeartIcon,\n      alt: \"favorite icon\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }))), copied && 'Link copiado!', /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": `${index}-ingredient-step`,\n      key: `${ing}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => {\n        funcsRecipes.streakIngredient(`${ing}-${index}`, event);\n        verifyCheckbox();\n      },\n      \"data-testid\": \"ingredient-search-radio\",\n      type: \"checkbox\",\n      value: ing,\n      name: ing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), ' ', /*#__PURE__*/React.createElement(\"p\", {\n      id: `${ing}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, ing)))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"start-button\",\n      type: \"button\",\n      disabled: check,\n      \"data-testid\": \"finish-recipe-btn\",\n      onClick: () => {\n        handleClickStartRecipe(id, ingredients, page);\n        navigate.push('/receitas-feitas');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, inProgress ? btnvalue : btnvalue));\n  }\n\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic\n  } = recipe;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    width: \"150\",\n    alt: \"meal\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, strAlcoholic === 'Alcoholic' ? 'Alcoholic' : strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    onClick: () => handleClickShare(pathDrink),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"share icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => onClickFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: favorite ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favorite icon\",\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }))), copied && 'Link copiado!', /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-ingredient-step`,\n    key: `${ing}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => {\n      funcsRecipes.streakIngredient(`${ing}-${index}`, event);\n      verifyCheckbox();\n    },\n    \"data-testid\": \"ingredient-search-radio\",\n    type: \"checkbox\",\n    value: ing,\n    name: ing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"p\", {\n    id: `${ing}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, ing)))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button\",\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: check,\n    onClick: () => {\n      handleClickStartRecipe(id, ingredients, page);\n      navigate.push('/receitas-feitas');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, inProgress ? btnvalue : btnvalue));\n};\n\nRecipeToProgress.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  commonProps: PropTypes.shape({\n    page: PropTypes.string.isRequired,\n    favorite: PropTypes.bool.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default RecipeToProgress;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/RecipeProgress/RecipeToProgress.jsx"],"names":["React","useContext","useState","useHistory","copy","PropTypes","funcsRecipes","Context","RecipeToProgress","id","area","image","name","category","instructions","youtube","alcoholic","meal","commonProps","navigate","handleClickStartRecipe","handleClickFavorite","favorite","ingredients","inProgress","btnvalue","copied","setCopied","check","setCheck","pathFood","pathDrink","handleClickShare","path","then","catch","err","console","log","verifyCheckbox","checked","document","querySelectorAll","length","onClickFavorite","recipe","page","strMealThumb","strMeal","strCategory","strInstructions","shareIcon","blackHeartIcon","whiteHeartIcon","map","ing","index","event","streakIngredient","push","strDrinkThumb","strDrink","strAlcoholic","propTypes","objectOf","string","isRequired","shape","bool","arrayOf","measures","meals","object","drinks"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport funcsRecipes from './functionsRecipeToProgress';\n\nimport Context from '../../Context';\n\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nconst RecipeToProgress = ({ id, area, image, name, category,\n  instructions, youtube, alcoholic, meal, commonProps }) => {\n  const navigate = useHistory();\n  const { handleClickStartRecipe, handleClickFavorite } = useContext(Context);\n\n  const { favorite, ingredients, inProgress } = commonProps;\n  const btnvalue = 'Finalizar Receita';\n  const [copied, setCopied] = useState(false);\n  const [check, setCheck] = useState(true);\n  const pathFood = `http://localhost:3000/comidas/${id}`;\n  const pathDrink = `http://localhost:3000/bebidas/${id}`;\n  const handleClickShare = (path) => {\n    copy(path)\n      .then(() => setCopied(true))\n      .catch((err) => console.log(err));\n  };\n  const verifyCheckbox = () => {\n    const checked = document.querySelectorAll('input:checked').length;\n    console.log(checked);\n    console.log(ingredients.length);\n\n    if (checked === ingredients.length) {\n      console.log('passou');\n      setCheck(false);\n    }\n  };\n  const onClickFavorite = () => {\n    if (meal) {\n      const recipe = { id, area, category, name, image };\n      return handleClickFavorite(recipe, meal);\n    }\n    const recipe = { id, category, alcoholic, name, image };\n    handleClickFavorite(recipe);\n  };\n  if (page === 'meal') {\n    const { strMealThumb, strMeal, strCategory, strInstructions } = recipe;\n\n    return (\n      <div>\n        <img src={ strMealThumb } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n        <h1 data-testid=\"recipe-title\">{strMeal}</h1>\n        <h3 data-testid=\"recipe-category\">{strCategory}</h3>\n\n        <div>\n          <button\n            type=\"button\"\n            data-testid=\"share-btn\"\n            onClick={ () => handleClickShare(pathFood) }\n          >\n            <img src={ shareIcon } alt=\"share icon\" />\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={ () => onClickFavorite }\n          >\n\n            <img\n              src={ favorite ? blackHeartIcon : whiteHeartIcon }\n              alt=\"favorite icon\"\n              data-testid=\"favorite-btn\"\n            />\n          </button>\n        </div>\n        { copied && 'Link copiado!' }\n\n        <h2>Ingredients</h2>\n        <div>\n          {\n            ingredients.map((ing, index) => (\n              <div\n                data-testid={ `${index}-ingredient-step` }\n                key={ `${ing}-${index}` }\n              >\n                <input\n                  onChange={ (event) => {\n                    funcsRecipes.streakIngredient(`${ing}-${index}`, event);\n                    verifyCheckbox();\n                  } }\n                  data-testid=\"ingredient-search-radio\"\n                  type=\"checkbox\"\n                  value={ ing }\n                  name={ ing }\n\n                />\n                {' '}\n                <p id={ `${ing}-${index}` }>{ing}</p>\n              </div>\n            ))\n          }\n        </div>\n\n        <h2>Instructions</h2>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n\n        <button\n          className=\"start-button\"\n          type=\"button\"\n          disabled={ check }\n          data-testid=\"finish-recipe-btn\"\n          onClick={ () => {\n            handleClickStartRecipe(id, ingredients, page);\n            navigate.push('/receitas-feitas');\n          } }\n        >\n          {inProgress ? btnvalue : btnvalue}\n        </button>\n\n      </div>\n\n    );\n  }\n\n  const { strDrinkThumb, strDrink, strCategory, strInstructions, strAlcoholic } = recipe;\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } width=\"150\" alt=\"meal\" data-testid=\"recipe-photo\" />\n      <h1 data-testid=\"recipe-title\">{strDrink}</h1>\n      <h3 data-testid=\"recipe-category\">\n        {strAlcoholic === 'Alcoholic' ? 'Alcoholic' : strCategory}\n      </h3>\n\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"share-btn\"\n          onClick={ () => handleClickShare(pathDrink) }\n        >\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={ () => onClickFavorite }\n        >\n          <img\n            src={ favorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"favorite icon\"\n            data-testid=\"favorite-btn\"\n          />\n        </button>\n      </div>\n      { copied && 'Link copiado!' }\n\n      <h2>Ingredients</h2>\n      <div>\n        {\n          ingredients.map((ing, index) => (\n            <div\n              data-testid={ `${index}-ingredient-step` }\n              key={ `${ing}-${index}` }\n            >\n              <input\n                onChange={ (event) => {\n                  funcsRecipes.streakIngredient(`${ing}-${index}`, event);\n                  verifyCheckbox();\n                } }\n                data-testid=\"ingredient-search-radio\"\n                type=\"checkbox\"\n                value={ ing }\n                name={ ing }\n              />\n              {' '}\n              <p id={ `${ing}-${index}` }>{ing}</p>\n            </div>\n\n          ))\n        }\n      </div>\n\n      <h2>Instructions</h2>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n\n      <button\n        className=\"start-button\"\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ check }\n        onClick={ () => {\n          handleClickStartRecipe(id, ingredients, page);\n          navigate.push('/receitas-feitas');\n        } }\n      >\n        { inProgress ? btnvalue : btnvalue }\n      </button>\n\n    </div>\n  );\n};\n\nRecipeToProgress.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  commonProps: PropTypes.shape({\n    page: PropTypes.string.isRequired,\n    favorite: PropTypes.bool.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default RecipeToProgress;\n"]},"metadata":{},"sourceType":"module"}