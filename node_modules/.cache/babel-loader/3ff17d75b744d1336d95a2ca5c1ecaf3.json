{"ast":null,"code":"var _jsxFileName = \"/home/eric/recipes-app/src/components/ExploreFoodButtons/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\n\nconst ExploreFoodButtons = ({\n  meal\n}) => {\n  const [randomFoodId, setRandomFoodId] = useState('');\n  useEffect(() => {\n    if (meal) {\n      Meals.getRandomMeal().then(({\n        idMeal\n      }) => setRandomFoodId(idMeal)).catch(err => console.log(err));\n    }\n\n    if (!meal) {\n      Drinks.getRandomCocktail().then(({\n        idDrink\n      }) => setRandomFoodId(idDrink)).catch(err => console.log(err));\n    }\n  }, [meal]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: meal ? '/explorar/comidas/ingredientes' : '/explorar/bebidas/ingredientes',\n    \"data-testid\": \"explore-by-ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Por Ingredientes\"), meal && /*#__PURE__*/React.createElement(Link, {\n    to: meal ? '/explorar/comidas/area' : '/explorar/bebidas/area',\n    \"data-testid\": \"explore-by-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Por Local de Origem\"), /*#__PURE__*/React.createElement(Link, {\n    to: meal ? `/comidas/${randomFoodId}` : `/bebidas/${randomFoodId}`,\n    \"data-testid\": \"explore-surprise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Me Surpreenda!\"));\n};\n\nExploreFoodButtons.propTypes = {\n  meal: PropTypes.bool.isRequired\n};\nexport default ExploreFoodButtons;","map":{"version":3,"sources":["/home/eric/recipes-app/src/components/ExploreFoodButtons/index.jsx"],"names":["React","useEffect","useState","Link","PropTypes","Meals","Drinks","ExploreFoodButtons","meal","randomFoodId","setRandomFoodId","getRandomMeal","then","idMeal","catch","err","console","log","getRandomCocktail","idDrink","propTypes","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACvC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAJ,EAAU;AACRH,MAAAA,KAAK,CAACM,aAAN,GACGC,IADH,CACQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAgBH,eAAe,CAACG,MAAD,CADvC,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;;AAED,QAAI,CAACP,IAAL,EAAW;AACTF,MAAAA,MAAM,CAACY,iBAAP,GACGN,IADH,CACQ,CAAC;AAAEO,QAAAA;AAAF,OAAD,KAAiBT,eAAe,CAACS,OAAD,CADxC,EAEGL,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;AACF,GAZQ,EAYN,CAACP,IAAD,CAZM,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAGA,IAAI,GAAG,gCAAH,GAAsC,gCADjD;AAEE,mBAAY,uBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EASIA,IAAI,iBACF,oBAAC,IAAD;AACE,IAAA,EAAE,EAAGA,IAAI,GAAG,wBAAH,GAA8B,wBADzC;AAEE,mBAAY,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVN,eAmBE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAGA,IAAI,GAAI,YAAWC,YAAa,EAA5B,GAAiC,YAAWA,YAAa,EADpE;AAEE,mBAAY,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF,CADF;AA4BD,CA7CD;;AA+CAF,kBAAkB,CAACa,SAAnB,GAA+B;AAAEZ,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,IAAV,CAAeC;AAAvB,CAA/B;AAEA,eAAef,kBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\n\nconst ExploreFoodButtons = ({ meal }) => {\n  const [randomFoodId, setRandomFoodId] = useState('');\n\n  useEffect(() => {\n    if (meal) {\n      Meals.getRandomMeal()\n        .then(({ idMeal }) => setRandomFoodId(idMeal))\n        .catch((err) => console.log(err));\n    }\n\n    if (!meal) {\n      Drinks.getRandomCocktail()\n        .then(({ idDrink }) => setRandomFoodId(idDrink))\n        .catch((err) => console.log(err));\n    }\n  }, [meal]);\n\n  return (\n    <div>\n      <Link\n        to={ meal ? '/explorar/comidas/ingredientes' : '/explorar/bebidas/ingredientes' }\n        data-testid=\"explore-by-ingredient\"\n      >\n        Por Ingredientes\n      </Link>\n\n      {\n        meal && (\n          <Link\n            to={ meal ? '/explorar/comidas/area' : '/explorar/bebidas/area' }\n            data-testid=\"explore-by-area\"\n          >\n            Por Local de Origem\n          </Link>\n        )\n      }\n\n      <Link\n        to={ meal ? `/comidas/${randomFoodId}` : `/bebidas/${randomFoodId}` }\n        data-testid=\"explore-surprise\"\n      >\n        Me Surpreenda!\n      </Link>\n    </div>\n  );\n};\n\nExploreFoodButtons.propTypes = { meal: PropTypes.bool.isRequired };\n\nexport default ExploreFoodButtons;\n"]},"metadata":{},"sourceType":"module"}