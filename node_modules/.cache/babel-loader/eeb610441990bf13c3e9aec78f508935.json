{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/SearchBarFood/SearchBarFood.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport meals from '../../services/meals-api';\n\nfunction SearchBarByFood(props) {\n  const {\n    searchValue\n  } = props;\n  const [meal, setMeal] = useState('');\n  const [radio, setRadio] = useState('');\n  const firstLetter = 'Primeira letra';\n\n  function searchByFood(event) {\n    if (event.target.value === 'Ingredientes') {\n      setRadio('Ingredientes');\n    } else if (event.target.value === 'Nome') {\n      setRadio('Nome');\n    } else {\n      setRadio(firstLetter);\n    }\n  }\n\n  async function handlerClick() {\n    if (radio === 'Ingredientes') {\n      const response = await meals.searchMealsByIngredient(searchValue);\n      setMeal(response);\n    }\n\n    if (radio === 'Nome') {\n      const response = await meals.searchMealsByName(searchValue);\n      setMeal(response);\n    }\n\n    if (radio === firstLetter && searchValue.length === 1) {\n      const response = await meals.searchMealsByFirstLetter(searchValue);\n      setDrink(response);\n    }\n\n    if (radio === 'Primeira letra' && searchValue.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onChange: event => searchByFood(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"ingredient-search-radio\",\n    type: \"radio\",\n    value: \"Ingredientes\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), ' ', \"Ingredientes\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-search-radio\",\n    type: \"radio\",\n    value: \"Nome\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), ' ', \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"first-letter-search-radio\",\n    type: \"radio\",\n    value: \"Primeira letra\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), ' ', \"Primeira letra\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: handlerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Buscar\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, console.log(drink)));\n}\n\nSearchBarByFood.propTypes = {\n  searchValue: PropTypes.string.isRequired\n};\nexport default SearchBarByFood;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/SearchBarFood/SearchBarFood.jsx"],"names":["React","useState","PropTypes","meals","SearchBarByFood","props","searchValue","meal","setMeal","radio","setRadio","firstLetter","searchByFood","event","target","value","handlerClick","response","searchMealsByIngredient","searchMealsByName","length","searchMealsByFirstLetter","setDrink","alert","console","log","drink","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport meals from '../../services/meals-api';\n\nfunction SearchBarByFood(props) {\n  const { searchValue } = props;\n  const [meal, setMeal] = useState('');\n  const [radio, setRadio] = useState('');\n  const firstLetter = 'Primeira letra';\n  function searchByFood(event) {\n    if (event.target.value === 'Ingredientes') {\n      setRadio('Ingredientes');\n    } else if (event.target.value === 'Nome') {\n      setRadio('Nome');\n    } else {\n      setRadio(firstLetter);\n    }\n  }\n  async function handlerClick() {\n    if (radio === 'Ingredientes') {\n      const response = await meals.searchMealsByIngredient(searchValue);\n      setMeal(response);\n    }\n    if (radio === 'Nome') {\n      const response = await meals.searchMealsByName(searchValue);\n      setMeal(response);\n    }\n    if (radio === firstLetter && searchValue.length === 1) {\n      const response = await meals.searchMealsByFirstLetter(searchValue);\n      setDrink(response);\n    }\n    if (radio === 'Primeira letra' && searchValue.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }\n\n  return (\n    <div>\n      <div onChange={ (event) => searchByFood(event) }>\n        <input\n          data-testid=\"ingredient-search-radio\"\n          type=\"radio\"\n          value=\"Ingredientes\"\n          name=\"foods\"\n        />\n        {' '}\n        Ingredientes\n        <input\n          data-testid=\"name-search-radio\"\n          type=\"radio\"\n          value=\"Nome\"\n          name=\"foods\"\n        />\n        {' '}\n        Nome\n        <input\n          data-testid=\"first-letter-search-radio\"\n          type=\"radio\"\n          value=\"Primeira letra\"\n          name=\"foods\"\n        />\n        {' '}\n        Primeira letra\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ handlerClick }\n        >\n          Buscar\n        </button>\n      </div>\n      <div>\n        {console.log(drink)}\n      </div>\n    </div>\n\n  );\n}\nSearchBarByFood.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n};\nexport default SearchBarByFood;\n"]},"metadata":{},"sourceType":"module"}