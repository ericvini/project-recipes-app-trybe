{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://www.themealdb.com/api/json/v1/1'\n});\n\nconst limitResult = (array, limit) => {\n  const startPositionToShow = 0;\n  const smallerArray = array.slice(startPositionToShow, limit);\n  return smallerArray;\n};\n\nconst searchMealsByName = async (name, limit) => {\n  const response = await api.get(`/search.php?s=${name}`);\n  const {\n    meals\n  } = response.data;\n  if (limit) return limitResult(meals, limit);\n  return meals;\n};\n\nconst searchMealsByFirstLetter = async (letter, limit) => {\n  const response = await api.get(`/search.php?f=${letter}`);\n  const {\n    meals\n  } = response.data;\n  if (limit) return limitResult(meals, limit);\n  return meals;\n};\n\nconst searchMealsByIngredient = async (ingredient, limit) => {\n  const response = await api.get(`/filter.php?i=${ingredient}`);\n  const {\n    meals\n  } = response.data;\n  if (limit) return limitResult(meals, limit);\n  return meals;\n};\n\nconst searchMealsByCategory = async (category, limit) => {\n  const response = await api.get(`/filter.php?c=${category}`);\n  const {\n    meals\n  } = response.data;\n  if (limit) return limitResult(meals, limit);\n  return meals;\n};\n\nconst searchMealsByArea = async (area, limit) => {\n  const response = await api.get(`/filter.php?a=${area}`);\n  const {\n    meals\n  } = response.data;\n  if (limit) return limitResult(meals, limit);\n  return meals;\n};\n\nconst getMeals = async limit => {\n  const response = await api.get('/search.php?s=');\n  const {\n    meals\n  } = response.data;\n  if (limit) return limitResult(meals, limit);\n  return meals;\n};\n\nconst getMealDetailsById = async id => {\n  const response = await api.get(`/lookup.php?i=${id}`);\n  const mealDetails = response.data.meals[0];\n  return mealDetails;\n};\n\nconst getRandomMeal = async () => {\n  const response = await api.get('/random.php');\n  const randomMeal = response.data.meals[0];\n  return randomMeal;\n};\n\nconst getMealCategories = async limit => {\n  const response = await api.get('/categories.php');\n  const {\n    categories\n  } = response.data;\n  if (limit) return limitResult(categories, limit);\n  return categories;\n};\n\nconst getMealCategoryList = async limit => {\n  const response = await api.get('list.php?c=list');\n  const {\n    meals: mealCategories\n  } = response.data;\n  if (limit) return limitResult(mealCategories, limit);\n  return mealCategories;\n};\n\nconst getMealIngredientList = async limit => {\n  const response = await api.get('list.php?i=list');\n  const {\n    meals: mealIngredients\n  } = response.data;\n  if (limit) return limitResult(mealIngredients, limit);\n  return mealIngredients;\n};\n\nconst getMealAreaList = async limit => {\n  const response = await api.get('list.php?a=list');\n  const {\n    meals: mealAreas\n  } = response.data;\n  if (limit) return limitResult(mealAreas, limit);\n  return mealAreas;\n};\n\nexport default {\n  searchMealsByName,\n  searchMealsByFirstLetter,\n  searchMealsByIngredient,\n  searchMealsByCategory,\n  searchMealsByArea,\n  getMeals,\n  getMealDetailsById,\n  getRandomMeal,\n  getMealCategories,\n  getMealCategoryList,\n  getMealIngredientList,\n  getMealAreaList\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/services/meals-api.js"],"names":["axios","api","create","baseURL","limitResult","array","limit","startPositionToShow","smallerArray","slice","searchMealsByName","name","response","get","meals","data","searchMealsByFirstLetter","letter","searchMealsByIngredient","ingredient","searchMealsByCategory","category","searchMealsByArea","area","getMeals","getMealDetailsById","id","mealDetails","getRandomMeal","randomMeal","getMealCategories","categories","getMealCategoryList","mealCategories","getMealIngredientList","mealIngredients","getMealAreaList","mealAreas"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://www.themealdb.com/api/json/v1/1',\n});\n\nconst limitResult = (array, limit) => {\n  const startPositionToShow = 0;\n\n  const smallerArray = array.slice(startPositionToShow, limit);\n  return smallerArray;\n};\n\nconst searchMealsByName = async (name, limit) => {\n  const response = await api.get(`/search.php?s=${name}`);\n  const { meals } = response.data;\n\n  if (limit) return limitResult(meals, limit);\n\n  return meals;\n};\n\nconst searchMealsByFirstLetter = async (letter, limit) => {\n  const response = await api.get(`/search.php?f=${letter}`);\n  const { meals } = response.data;\n\n  if (limit) return limitResult(meals, limit);\n\n  return meals;\n};\n\nconst searchMealsByIngredient = async (ingredient, limit) => {\n  const response = await api.get(`/filter.php?i=${ingredient}`);\n  const { meals } = response.data;\n\n  if (limit) return limitResult(meals, limit);\n\n  return meals;\n};\n\nconst searchMealsByCategory = async (category, limit) => {\n  const response = await api.get(`/filter.php?c=${category}`);\n  const { meals } = response.data;\n\n  if (limit) return limitResult(meals, limit);\n\n  return meals;\n};\n\nconst searchMealsByArea = async (area, limit) => {\n  const response = await api.get(`/filter.php?a=${area}`);\n  const { meals } = response.data;\n\n  if (limit) return limitResult(meals, limit);\n\n  return meals;\n};\n\nconst getMeals = async (limit) => {\n  const response = await api.get('/search.php?s=');\n  const { meals } = response.data;\n\n  if (limit) return limitResult(meals, limit);\n\n  return meals;\n};\n\nconst getMealDetailsById = async (id) => {\n  const response = await api.get(`/lookup.php?i=${id}`);\n  const mealDetails = response.data.meals[0];\n\n  return mealDetails;\n};\n\nconst getRandomMeal = async () => {\n  const response = await api.get('/random.php');\n  const randomMeal = response.data.meals[0];\n\n  return randomMeal;\n};\n\nconst getMealCategories = async (limit) => {\n  const response = await api.get('/categories.php');\n  const { categories } = response.data;\n\n  if (limit) return limitResult(categories, limit);\n\n  return categories;\n};\n\nconst getMealCategoryList = async (limit) => {\n  const response = await api.get('list.php?c=list');\n  const { meals: mealCategories } = response.data;\n\n  if (limit) return limitResult(mealCategories, limit);\n\n  return mealCategories;\n};\n\nconst getMealIngredientList = async (limit) => {\n  const response = await api.get('list.php?i=list');\n  const { meals: mealIngredients } = response.data;\n\n  if (limit) return limitResult(mealIngredients, limit);\n\n  return mealIngredients;\n};\n\nconst getMealAreaList = async (limit) => {\n  const response = await api.get('list.php?a=list');\n  const { meals: mealAreas } = response.data;\n\n  if (limit) return limitResult(mealAreas, limit);\n\n  return mealAreas;\n};\n\nexport default {\n  searchMealsByName,\n  searchMealsByFirstLetter,\n  searchMealsByIngredient,\n  searchMealsByCategory,\n  searchMealsByArea,\n  getMeals,\n  getMealDetailsById,\n  getRandomMeal,\n  getMealCategories,\n  getMealCategoryList,\n  getMealIngredientList,\n  getMealAreaList,\n};\n"]},"metadata":{},"sourceType":"module"}