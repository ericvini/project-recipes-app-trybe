{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/Grid/index.jsx\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport Context from '../../Context';\nimport useLoadApiData from '../../Hooks/useLoadApiData';\n\nconst Grid = ({\n  isMeal\n}) => {\n  useLoadApiData(isMeal);\n  const {\n    mealsData,\n    mealsCategoryList,\n    mealsFilteredData,\n    handleClickCategoryMeals\n  } = useContext(Context).meal;\n  const {\n    drinksData,\n    drinksCategoryList,\n    drinksFilteredData,\n    handleClickCategoryDrinks\n  } = useContext(Context).drink;\n\n  const loadingData = () => {\n    if (isMeal) return mealsData.length || mealsCategoryList.length;\n    return drinksData.length || drinksCategoryList.length;\n  };\n\n  if (!loadingData()) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Loading meals...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: () => isMeal ? handleClickCategoryMeals('All') : handleClickCategoryDrinks('All'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"All\"), isMeal ? mealsCategoryList.map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    key: strCategory,\n    \"data-testid\": `${strCategory}-category-filter`,\n    onClick: () => handleClickCategoryMeals(strCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, strCategory)) : drinksCategoryList.map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    key: strCategory,\n    \"data-testid\": `${strCategory}-category-filter`,\n    onClick: () => handleClickCategoryDrinks(strCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, strCategory))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, isMeal ? mealsFilteredData.map(({\n    idMeal,\n    strMeal,\n    strMealThumb\n  }, index) => /*#__PURE__*/React.createElement(Link, {\n    to: `/comidas/${idMeal}`,\n    key: idMeal,\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"recipe-img\",\n    width: \"150\",\n    src: strMealThumb,\n    alt: \"meal\",\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, strMeal))) : drinksFilteredData.map(({\n    idDrink,\n    strDrink,\n    strDrinkThumb\n  }, index) => /*#__PURE__*/React.createElement(Link, {\n    to: `/bebidas/${idDrink}`,\n    key: idDrink,\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"recipe-img\",\n    width: \"150\",\n    src: strDrinkThumb,\n    alt: \"drink\",\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, strDrink)))));\n};\n\nGrid.defaultProps = {\n  isMeal: false\n};\nGrid.propTypes = {\n  isMeal: PropTypes.bool\n};\nexport default Grid;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/Grid/index.jsx"],"names":["React","useContext","Link","PropTypes","Context","useLoadApiData","Grid","isMeal","mealsData","mealsCategoryList","mealsFilteredData","handleClickCategoryMeals","meal","drinksData","drinksCategoryList","drinksFilteredData","handleClickCategoryDrinks","drink","loadingData","length","map","strCategory","idMeal","strMeal","strMealThumb","index","idDrink","strDrink","strDrinkThumb","defaultProps","propTypes","bool"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nimport Context from '../../Context';\nimport useLoadApiData from '../../Hooks/useLoadApiData';\n\nconst Grid = ({ isMeal }) => {\n  useLoadApiData(isMeal);\n\n  const {\n    mealsData, mealsCategoryList, mealsFilteredData, handleClickCategoryMeals,\n  } = useContext(Context).meal;\n\n  const {\n    drinksData, drinksCategoryList, drinksFilteredData, handleClickCategoryDrinks,\n  } = useContext(Context).drink;\n\n  const loadingData = () => {\n    if (isMeal) return mealsData.length || mealsCategoryList.length;\n    return drinksData.length || drinksCategoryList.length;\n  };\n\n  if (!loadingData()) {\n    return <h1>Loading meals...</h1>;\n  }\n\n  return (\n    <>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ () => (\n            isMeal\n              ? handleClickCategoryMeals('All')\n              : handleClickCategoryDrinks('All')\n          ) }\n        >\n          All\n        </button>\n        {\n          isMeal\n            ? (\n              mealsCategoryList.map(({ strCategory }) => (\n                <button\n                  type=\"button\"\n                  key={ strCategory }\n                  data-testid={ `${strCategory}-category-filter` }\n                  onClick={ () => handleClickCategoryMeals(strCategory) }\n                >\n                  { strCategory}\n                </button>\n              ))\n            )\n            : (\n              drinksCategoryList.map(({ strCategory }) => (\n                <button\n                  type=\"button\"\n                  key={ strCategory }\n                  data-testid={ `${strCategory}-category-filter` }\n                  onClick={ () => handleClickCategoryDrinks(strCategory) }\n                >\n                  { strCategory}\n                </button>\n              ))\n            )\n        }\n      </div>\n      <div className=\"grid-list\">\n        {\n          isMeal ? (\n            mealsFilteredData.map(({ idMeal, strMeal, strMealThumb }, index) => (\n              <Link\n                to={ `/comidas/${idMeal}` }\n                key={ idMeal }\n                data-testid={ `${index}-recipe-card` }\n              >\n                <img\n                  className=\"recipe-img\"\n                  width=\"150\"\n                  src={ strMealThumb }\n                  alt=\"meal\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <h2 data-testid={ `${index}-card-name` }>\n                  {strMeal}\n                </h2>\n              </Link>\n            ))\n          ) : (\n            drinksFilteredData.map(({ idDrink, strDrink, strDrinkThumb }, index) => (\n              <Link\n                to={ `/bebidas/${idDrink}` }\n                key={ idDrink }\n                data-testid={ `${index}-recipe-card` }\n              >\n                <img\n                  className=\"recipe-img\"\n                  width=\"150\"\n                  src={ strDrinkThumb }\n                  alt=\"drink\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <h2 data-testid={ `${index}-card-name` }>\n                  {strDrink}\n                </h2>\n              </Link>\n            ))\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nGrid.defaultProps = { isMeal: false };\n\nGrid.propTypes = { isMeal: PropTypes.bool };\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}