{"ast":null,"code":"var _jsxFileName = \"/home/eric/recipes-app/src/Context/RecipesProvider.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './index';\nimport useLocalStorage from '../Hooks/useLocalStorage';\nimport Meals from '../services/meals-api';\nimport Drinks from '../services/cocktails-api';\n\nfunction RecipesProvider({\n  children\n}) {\n  const [mealsData, setMealsData] = useState([]);\n  const [mealsFilteredData, setMealsFilteredData] = useState([]);\n  const [mealsCategoryList, setMealsCategoryList] = useState([]);\n  const [currentFilterMealsCategory, setCurrentFilterMealsCategory] = useState('All');\n  const [drinksData, setDrinksData] = useState([]);\n  const [drinksFilteredData, setDrinksFilteredData] = useState([]);\n  const [drinksCategoryList, setDrinksCategoryList] = useState([]);\n  const [currentFilterDrinksCategory, setCurrentFilterDrinksCategory] = useState('All');\n  const [inProgressRecipes, setInProgressRecipes, favoriteRecipes, setFavoriteRecipes, doneRecipes] = useLocalStorage();\n  const [filteredDoneRecipes, setFilteredDoneRecipes] = useState([]);\n  const [filteredFavoriteRecipes, setFilteredFavoriteRecipes] = useState([]);\n  const [searchData, setSearchData] = useState('');\n  const [isSearchBarActive, setIsSearchBarActive] = useState(false);\n  useEffect(() => {\n    setMealsFilteredData(mealsData);\n  }, [mealsData]);\n  useEffect(() => {\n    setDrinksFilteredData(drinksData);\n  }, [drinksData]);\n  useEffect(() => {\n    setFilteredDoneRecipes(doneRecipes);\n  }, [doneRecipes]);\n  useEffect(() => {\n    setFilteredFavoriteRecipes(favoriteRecipes);\n  }, [favoriteRecipes]);\n\n  const checkFavorite = id => {\n    const foundRecipe = favoriteRecipes.find(recipe => recipe.id === id);\n\n    if (foundRecipe) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleClickCategoryMeals = async category => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setMealsFilteredData(mealsData);\n      return setCurrentFilterMealsCategory('All');\n    }\n\n    if (currentFilterMealsCategory !== category) {\n      const meals = await Meals.searchMealsByCategory(category, mealsAmountToShow);\n      setMealsFilteredData(meals);\n      return setCurrentFilterMealsCategory(category);\n    }\n\n    setMealsFilteredData(mealsData);\n    setCurrentFilterMealsCategory('All');\n  };\n\n  const handleClickCategoryDrinks = async category => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setDrinksFilteredData(drinksData);\n      return setCurrentFilterDrinksCategory('All');\n    }\n\n    if (currentFilterDrinksCategory !== category) {\n      const drinks = await Drinks.searchCocktailsByCategory(category, mealsAmountToShow);\n      setDrinksFilteredData(drinks);\n      return setCurrentFilterDrinksCategory(category);\n    }\n\n    setDrinksFilteredData(drinksData);\n    setCurrentFilterDrinksCategory('All');\n  };\n\n  const verifyInProgress = (id, isMeal) => {\n    const key = isMeal ? 'meals' : 'cocktails';\n\n    if (inProgressRecipes[key]) {\n      const isInProgress = inProgressRecipes[key][id];\n      if (isInProgress) return true;\n    }\n\n    return false;\n  };\n\n  const handleClickFavorite = (recipe, isMeal) => {\n    if (isMeal) {\n      const {\n        id,\n        area,\n        category,\n        name,\n        image\n      } = recipe;\n      const alreadyFavorite = checkFavorite(id);\n\n      if (alreadyFavorite) {\n        const newFilteredFavoriteRecipes = favoriteRecipes.filter(rec => rec.id !== id);\n        return setFavoriteRecipes(newFilteredFavoriteRecipes);\n      }\n\n      const newFavorite = {\n        id,\n        area,\n        category,\n        name,\n        image,\n        alcoholicOrNot: '',\n        type: 'comida'\n      };\n      return setFavoriteRecipes(state => [...state, newFavorite]);\n    }\n\n    const {\n      id,\n      category,\n      alcoholic,\n      name,\n      image\n    } = recipe;\n    const alreadyFavorite = checkFavorite(id);\n\n    if (alreadyFavorite) {\n      const newFilteredFavoriteRecipes = favoriteRecipes.filter(rec => rec.id !== id);\n      return setFavoriteRecipes(newFilteredFavoriteRecipes);\n    }\n\n    const newFavorite = {\n      id,\n      category,\n      alcoholicOrNot: alcoholic,\n      name,\n      image,\n      area: '',\n      type: 'bebida'\n    };\n    setFavoriteRecipes(state => [...state, newFavorite]);\n  };\n\n  const handleClickStartRecipe = (id, ingredients, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n    const isInProgress = verifyInProgress(id, page);\n\n    if (!isInProgress) {\n      setInProgressRecipes(state => ({ ...state,\n        [key]: { ...state[key],\n          [id]: ingredients\n        }\n      }));\n    }\n  };\n\n  const handleClickFilterRecipesMade = filter => {\n    if (!filter) return setFilteredDoneRecipes(doneRecipes);\n    const newFilteredRecipes = filteredDoneRecipes.filter(({\n      type\n    }) => type === filter);\n    setFilteredDoneRecipes(newFilteredRecipes);\n  };\n\n  const handleClickFilterFavoriteRecipes = filter => {\n    if (!filter) return setFilteredFavoriteRecipes(favoriteRecipes);\n    const newFilteredRecipes = filteredFavoriteRecipes.filter(({\n      type\n    }) => type === filter);\n    setFilteredFavoriteRecipes(newFilteredRecipes);\n  };\n\n  const states = {\n    filteredFavoriteRecipes,\n    handleClickFilterFavoriteRecipes,\n    filteredDoneRecipes,\n    handleClickFilterRecipesMade,\n    checkFavorite,\n    handleClickFavorite,\n    verifyInProgress,\n    handleClickStartRecipe,\n    // email: '',\n    meal: {\n      mealsData,\n      setMealsData,\n      mealsCategoryList,\n      setMealsCategoryList,\n      mealsFilteredData,\n      setMealsFilteredData,\n      handleClickCategoryMeals\n    },\n    drink: {\n      drinksData,\n      setDrinksData,\n      drinksCategoryList,\n      setDrinksCategoryList,\n      drinksFilteredData,\n      setDrinksFilteredData,\n      handleClickCategoryDrinks\n    },\n    isSearchBarActive,\n    setIsSearchBarActive,\n    searchData,\n    setSearchData\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: states,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default RecipesProvider;\nRecipesProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/home/eric/recipes-app/src/Context/RecipesProvider.jsx"],"names":["React","useEffect","useState","PropTypes","RecipesContext","useLocalStorage","Meals","Drinks","RecipesProvider","children","mealsData","setMealsData","mealsFilteredData","setMealsFilteredData","mealsCategoryList","setMealsCategoryList","currentFilterMealsCategory","setCurrentFilterMealsCategory","drinksData","setDrinksData","drinksFilteredData","setDrinksFilteredData","drinksCategoryList","setDrinksCategoryList","currentFilterDrinksCategory","setCurrentFilterDrinksCategory","inProgressRecipes","setInProgressRecipes","favoriteRecipes","setFavoriteRecipes","doneRecipes","filteredDoneRecipes","setFilteredDoneRecipes","filteredFavoriteRecipes","setFilteredFavoriteRecipes","searchData","setSearchData","isSearchBarActive","setIsSearchBarActive","checkFavorite","id","foundRecipe","find","recipe","handleClickCategoryMeals","category","mealsAmountToShow","meals","searchMealsByCategory","handleClickCategoryDrinks","drinks","searchCocktailsByCategory","verifyInProgress","isMeal","key","isInProgress","handleClickFavorite","area","name","image","alreadyFavorite","newFilteredFavoriteRecipes","filter","rec","newFavorite","alcoholicOrNot","type","state","alcoholic","handleClickStartRecipe","ingredients","page","handleClickFilterRecipesMade","newFilteredRecipes","handleClickFilterFavoriteRecipes","states","meal","drink","propTypes","element","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RecipesContext from './index';\nimport useLocalStorage from '../Hooks/useLocalStorage';\nimport Meals from '../services/meals-api';\nimport Drinks from '../services/cocktails-api';\n\nfunction RecipesProvider({ children }) {\n  const [mealsData, setMealsData] = useState([]);\n  const [mealsFilteredData, setMealsFilteredData] = useState([]);\n  const [mealsCategoryList, setMealsCategoryList] = useState([]);\n  const [currentFilterMealsCategory, setCurrentFilterMealsCategory] = useState('All');\n\n  const [drinksData, setDrinksData] = useState([]);\n  const [drinksFilteredData, setDrinksFilteredData] = useState([]);\n  const [drinksCategoryList, setDrinksCategoryList] = useState([]);\n  const [currentFilterDrinksCategory, setCurrentFilterDrinksCategory] = useState('All');\n\n  const [\n    inProgressRecipes,\n    setInProgressRecipes,\n    favoriteRecipes,\n    setFavoriteRecipes,\n    doneRecipes,\n  ] = useLocalStorage();\n\n  const [filteredDoneRecipes, setFilteredDoneRecipes] = useState([]);\n  const [filteredFavoriteRecipes, setFilteredFavoriteRecipes] = useState([]);\n\n  const [searchData, setSearchData] = useState('');\n  const [isSearchBarActive, setIsSearchBarActive] = useState(false);\n\n  useEffect(() => { setMealsFilteredData(mealsData); }, [mealsData]);\n  useEffect(() => { setDrinksFilteredData(drinksData); }, [drinksData]);\n  useEffect(() => { setFilteredDoneRecipes(doneRecipes); }, [doneRecipes]);\n  useEffect(() => { setFilteredFavoriteRecipes(favoriteRecipes); }, [favoriteRecipes]);\n\n  const checkFavorite = (id) => {\n    const foundRecipe = favoriteRecipes.find((recipe) => recipe.id === id);\n\n    if (foundRecipe) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleClickCategoryMeals = async (category) => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setMealsFilteredData(mealsData);\n      return setCurrentFilterMealsCategory('All');\n    }\n\n    if (currentFilterMealsCategory !== category) {\n      const meals = await Meals.searchMealsByCategory(category, mealsAmountToShow);\n      setMealsFilteredData(meals);\n      return setCurrentFilterMealsCategory(category);\n    }\n    setMealsFilteredData(mealsData);\n    setCurrentFilterMealsCategory('All');\n  };\n\n  const handleClickCategoryDrinks = async (category) => {\n    const mealsAmountToShow = 12;\n\n    if (category === 'All') {\n      setDrinksFilteredData(drinksData);\n      return setCurrentFilterDrinksCategory('All');\n    }\n\n    if (currentFilterDrinksCategory !== category) {\n      const drinks = await Drinks.searchCocktailsByCategory(category, mealsAmountToShow);\n      setDrinksFilteredData(drinks);\n      return setCurrentFilterDrinksCategory(category);\n    }\n    setDrinksFilteredData(drinksData);\n    setCurrentFilterDrinksCategory('All');\n  };\n\n  const verifyInProgress = (id, isMeal) => {\n    const key = isMeal ? 'meals' : 'cocktails';\n\n    if (inProgressRecipes[key]) {\n      const isInProgress = inProgressRecipes[key][id];\n      if (isInProgress) return true;\n    }\n    return false;\n  };\n\n  const handleClickFavorite = (recipe, isMeal) => {\n    if (isMeal) {\n      const { id, area, category, name, image } = recipe;\n\n      const alreadyFavorite = checkFavorite(id);\n\n      if (alreadyFavorite) {\n        const newFilteredFavoriteRecipes = favoriteRecipes.filter((rec) => rec.id !== id);\n        return setFavoriteRecipes(newFilteredFavoriteRecipes);\n      }\n      const newFavorite = {\n        id, area, category, name, image, alcoholicOrNot: '', type: 'comida',\n      };\n\n      return setFavoriteRecipes((state) => [...state, newFavorite]);\n    }\n\n    const { id, category, alcoholic, name, image } = recipe;\n\n    const alreadyFavorite = checkFavorite(id);\n\n    if (alreadyFavorite) {\n      const newFilteredFavoriteRecipes = favoriteRecipes.filter((rec) => rec.id !== id);\n      return setFavoriteRecipes(newFilteredFavoriteRecipes);\n    }\n\n    const newFavorite = {\n      id, category, alcoholicOrNot: alcoholic, name, image, area: '', type: 'bebida',\n    };\n    setFavoriteRecipes((state) => [...state, newFavorite]);\n  };\n\n  const handleClickStartRecipe = (id, ingredients, page) => {\n    const key = page === 'meal' ? 'meals' : 'cocktails';\n\n    const isInProgress = verifyInProgress(id, page);\n    if (!isInProgress) {\n      setInProgressRecipes((state) => ({\n        ...state, [key]: { ...state[key], [id]: ingredients },\n      }));\n    }\n  };\n\n  const handleClickFilterRecipesMade = (filter) => {\n    if (!filter) return setFilteredDoneRecipes(doneRecipes);\n\n    const newFilteredRecipes = filteredDoneRecipes.filter(({ type }) => type === filter);\n    setFilteredDoneRecipes(newFilteredRecipes);\n  };\n\n  const handleClickFilterFavoriteRecipes = (filter) => {\n    if (!filter) return setFilteredFavoriteRecipes(favoriteRecipes);\n\n    const newFilteredRecipes = filteredFavoriteRecipes\n      .filter(({ type }) => type === filter);\n\n    setFilteredFavoriteRecipes(newFilteredRecipes);\n  };\n\n  const states = {\n    filteredFavoriteRecipes,\n    handleClickFilterFavoriteRecipes,\n    filteredDoneRecipes,\n    handleClickFilterRecipesMade,\n    checkFavorite,\n    handleClickFavorite,\n    verifyInProgress,\n    handleClickStartRecipe,\n    // email: '',\n    meal: {\n      mealsData,\n      setMealsData,\n      mealsCategoryList,\n      setMealsCategoryList,\n      mealsFilteredData,\n      setMealsFilteredData,\n      handleClickCategoryMeals,\n    },\n    drink: {\n      drinksData,\n      setDrinksData,\n      drinksCategoryList,\n      setDrinksCategoryList,\n      drinksFilteredData,\n      setDrinksFilteredData,\n      handleClickCategoryDrinks,\n    },\n    isSearchBarActive,\n    setIsSearchBarActive,\n    searchData,\n    setSearchData,\n  };\n\n  return (\n    <RecipesContext.Provider value={ states }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nexport default RecipesProvider;\n\nRecipesProvider.propTypes = { children: PropTypes.element.isRequired };\n"]},"metadata":{},"sourceType":"module"}