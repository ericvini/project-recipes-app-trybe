{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/Grid/index.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Context from '../../Context';\nimport Meals from '../../services/meals-api';\n\nconst Grid = () => {\n  const {\n    data,\n    setData,\n    categoryList,\n    setCategoryList,\n    filteredData,\n    handleClickCategory\n  } = useContext(Context);\n  useEffect(() => {\n    const mealsAmountToShow = 12;\n    Meals.getMeals(mealsAmountToShow).then(res => setData(res)).catch(err => console.log(err));\n  }, [setData]);\n  useEffect(() => {\n    const categoriesAmountToShow = 5;\n    Meals.getMealCategoryList(categoriesAmountToShow).then(res => setCategoryList(res)).catch(err => console.log(err));\n  }, [setCategoryList]);\n\n  if (!data.length || !categoryList.length) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, \"Loading meals...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleClickCategory('All'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"All\"), categoryList.map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    key: strCategory,\n    \"data-testid\": `${strCategory}-category-filter`,\n    onClick: () => handleClickCategory(strCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, strCategory))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, filteredData.map(({\n    idMeal,\n    strMeal,\n    strMealThumb\n  }) => /*#__PURE__*/React.createElement(Link, {\n    to: `/comidas/${idMeal}`,\n    key: idMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strMealThumb,\n    alt: \"meal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, strMeal)))));\n};\n\nexport default Grid;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/Grid/index.jsx"],"names":["React","useContext","useEffect","Link","Context","Meals","Grid","data","setData","categoryList","setCategoryList","filteredData","handleClickCategory","mealsAmountToShow","getMeals","then","res","catch","err","console","log","categoriesAmountToShow","getMealCategoryList","length","map","strCategory","idMeal","strMeal","strMealThumb"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA;AANI,MAOFX,UAAU,CAACG,OAAD,CAPd;AASAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,iBAAiB,GAAG,EAA1B;AAEAR,IAAAA,KAAK,CAACS,QAAN,CAAeD,iBAAf,EACGE,IADH,CACSC,GAAD,IAASR,OAAO,CAACQ,GAAD,CADxB,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD,GANQ,EAMN,CAACV,OAAD,CANM,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,sBAAsB,GAAG,CAA/B;AAEAhB,IAAAA,KAAK,CAACiB,mBAAN,CAA0BD,sBAA1B,EACGN,IADH,CACSC,GAAD,IAASN,eAAe,CAACM,GAAD,CADhC,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD,GANQ,EAMN,CAACR,eAAD,CANM,CAAT;;AAQA,MAAI,CAACH,IAAI,CAACgB,MAAN,IAAgB,CAACd,YAAY,CAACc,MAAlC,EAA0C;AACxC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAG,MAAMX,mBAAmB,CAAC,KAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAKIH,YAAY,CAACe,GAAb,CAAiB,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACf;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,GAAG,EAAGA,WAFR;AAGE,mBAAe,GAAEA,WAAY,kBAH/B;AAIE,IAAA,OAAO,EAAG,MAAMb,mBAAmB,CAACa,WAAD,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIA,WANJ,CADF,CALJ,CADF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEId,YAAY,CAACa,GAAb,CAAiB,CAAC;AAAEE,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAD,kBACf,oBAAC,IAAD;AACE,IAAA,EAAE,EAAI,YAAWF,MAAO,EAD1B;AAEE,IAAA,GAAG,EAAGA,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,GAAG,EAAGE,YAAX;AAA0B,IAAA,GAAG,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAL,CALF,CADF,CAFJ,CAlBF,CADF;AAkCD,CAhED;;AAkEA,eAAerB,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Context from '../../Context';\nimport Meals from '../../services/meals-api';\n\nconst Grid = () => {\n  const {\n    data,\n    setData,\n    categoryList,\n    setCategoryList,\n    filteredData,\n    handleClickCategory,\n  } = useContext(Context);\n\n  useEffect(() => {\n    const mealsAmountToShow = 12;\n\n    Meals.getMeals(mealsAmountToShow)\n      .then((res) => setData(res))\n      .catch((err) => console.log(err));\n  }, [setData]);\n\n  useEffect(() => {\n    const categoriesAmountToShow = 5;\n\n    Meals.getMealCategoryList(categoriesAmountToShow)\n      .then((res) => setCategoryList(res))\n      .catch((err) => console.log(err));\n  }, [setCategoryList]);\n\n  if (!data.length || !categoryList.length) {\n    return <h1>Loading meals...</h1>;\n  }\n\n  return (\n    <>\n      <div>\n        <button type=\"button\" onClick={ () => handleClickCategory('All') }>\n          All\n        </button>\n        {\n          categoryList.map(({ strCategory }) => (\n            <button\n              type=\"button\"\n              key={ strCategory }\n              data-testid={ `${strCategory}-category-filter` }\n              onClick={ () => handleClickCategory(strCategory) }\n            >\n              { strCategory}\n            </button>\n          ))\n        }\n      </div>\n      <div>\n        {\n          filteredData.map(({ idMeal, strMeal, strMealThumb }) => (\n            <Link\n              to={ `/comidas/${idMeal}` }\n              key={ idMeal }\n            >\n              <img src={ strMealThumb } alt=\"meal\" />\n              <h2>{strMeal}</h2>\n            </Link>\n          ))\n        }\n      </div>\n    </>\n  );\n};\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}