{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/RecipeDetails/index.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport Context from '../../Context';\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\nimport Recipe from '../Recipe';\n\nconst filterFoodKeys = food => {\n  const objKeys = Object.keys(food);\n  const filteredIngredientKeys = objKeys.filter(key => key.includes('strIngredient'));\n  const filteredMeasureKeys = objKeys.filter(key => key.includes('strMeasure'));\n  const ingredientsObj = filteredIngredientKeys.map(key => food[key]);\n  const measuresObj = filteredMeasureKeys.map(key => food[key]);\n  const ingredientsObjFiltered = ingredientsObj.filter(ing => ing);\n  const measuresObjFiltered = measuresObj.filter(ing => ing);\n  return [ingredientsObjFiltered, measuresObjFiltered];\n};\n\nconst RecipeDetails = ({\n  page,\n  recipetype\n}) => {\n  const {\n    id\n  } = useParams();\n  const {\n    verifyInProgress,\n    checkFavorite\n  } = useContext(Context);\n  const [meal, setMeal] = useState({});\n  const [drink, setDrink] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const [inProgress, setInProgress] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  useEffect(() => {\n    const isInProgress = verifyInProgress(id, page);\n\n    if (isInProgress) {\n      setInProgress(true);\n    }\n  }, [verifyInProgress, id, page]);\n  useEffect(() => {\n    const isFavorite = checkFavorite(id);\n\n    if (isFavorite) {\n      setFavorite(true);\n    } else {\n      setFavorite(false);\n    }\n  }, [id, checkFavorite]);\n  useEffect(() => {\n    const limitToShow = 6;\n\n    if (page === 'meal') {\n      Meals.getMealDetailsById(id).then(res => {\n        const [filteredIngredients, filteredMeasures] = filterFoodKeys(res);\n        setIngredients(filteredIngredients);\n        setMeasures(filteredMeasures);\n        setMeal(res);\n        setIsFetching(false);\n      }).catch(err => console.log(err));\n      Drinks.getCocktails(limitToShow).then(res => setDrinks(res)).catch(err => console.log(err));\n    }\n\n    if (page === 'drink') {\n      Drinks.getCocktailDetailsById(id).then(res => {\n        const [filteredIngredients, filteredMeasures] = filterFoodKeys(res);\n        setIngredients(filteredIngredients);\n        setMeasures(filteredMeasures);\n        setDrink(res);\n        setIsFetching(false);\n      }).catch(err => console.log(err));\n      Meals.getMeals(limitToShow).then(res => setMeals(res)).catch(err => console.log(err));\n    }\n  }, [page, id]);\n\n  if (isFetching) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 12\n      }\n    }, \"Loading details...\");\n  }\n\n  const commonProps = {\n    page,\n    favorite,\n    ingredients,\n    meals,\n    drinks,\n    measures,\n    inProgress,\n    id\n  };\n  return /*#__PURE__*/React.createElement(Recipe, {\n    recipe: page === 'meal' ? meal : drink,\n    commonProps: commonProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  });\n};\n\nRecipeDetails.propTypes = {\n  page: PropTypes.string.isRequired\n};\nexport default RecipeDetails;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/RecipeDetails/index.jsx"],"names":["React","useContext","useEffect","useState","useParams","PropTypes","Context","Meals","Drinks","Recipe","filterFoodKeys","food","objKeys","Object","keys","filteredIngredientKeys","filter","key","includes","filteredMeasureKeys","ingredientsObj","map","measuresObj","ingredientsObjFiltered","ing","measuresObjFiltered","RecipeDetails","page","recipetype","id","verifyInProgress","checkFavorite","meal","setMeal","drink","setDrink","meals","setMeals","drinks","setDrinks","ingredients","setIngredients","measures","setMeasures","isFetching","setIsFetching","inProgress","setInProgress","favorite","setFavorite","isInProgress","isFavorite","limitToShow","getMealDetailsById","then","res","filteredIngredients","filteredMeasures","catch","err","console","log","getCocktails","getCocktailDetailsById","getMeals","commonProps","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nimport Context from '../../Context';\nimport Meals from '../../services/meals-api';\nimport Drinks from '../../services/cocktails-api';\nimport Recipe from '../Recipe';\n\nconst filterFoodKeys = (food) => {\n  const objKeys = Object.keys(food);\n\n  const filteredIngredientKeys = objKeys.filter((key) => key.includes('strIngredient'));\n  const filteredMeasureKeys = objKeys.filter((key) => key.includes('strMeasure'));\n\n  const ingredientsObj = filteredIngredientKeys.map((key) => food[key]);\n  const measuresObj = filteredMeasureKeys.map((key) => food[key]);\n\n  const ingredientsObjFiltered = ingredientsObj.filter((ing) => ing);\n  const measuresObjFiltered = measuresObj.filter((ing) => ing);\n\n  return [ingredientsObjFiltered, measuresObjFiltered];\n};\n\nconst RecipeDetails = ({ page, recipetype }) => {\n  const { id } = useParams();\n  const { verifyInProgress, checkFavorite } = useContext(Context);\n\n  const [meal, setMeal] = useState({});\n  const [drink, setDrink] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n\n  const [isFetching, setIsFetching] = useState(true);\n  const [inProgress, setInProgress] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n\n  useEffect(() => {\n    const isInProgress = verifyInProgress(id, page);\n    if (isInProgress) {\n      setInProgress(true);\n    }\n  }, [verifyInProgress, id, page]);\n\n  useEffect(() => {\n    const isFavorite = checkFavorite(id);\n    if (isFavorite) {\n      setFavorite(true);\n    } else {\n      setFavorite(false);\n    }\n  }, [id, checkFavorite]);\n\n  useEffect(() => {\n    const limitToShow = 6;\n\n    if (page === 'meal') {\n      Meals.getMealDetailsById(id)\n        .then((res) => {\n          const [filteredIngredients, filteredMeasures] = filterFoodKeys(res);\n          setIngredients(filteredIngredients);\n          setMeasures(filteredMeasures);\n          setMeal(res);\n          setIsFetching(false);\n        })\n        .catch((err) => console.log(err));\n\n      Drinks.getCocktails(limitToShow)\n        .then((res) => setDrinks(res))\n        .catch((err) => console.log(err));\n    }\n\n    if (page === 'drink') {\n      Drinks.getCocktailDetailsById(id)\n        .then((res) => {\n          const [filteredIngredients, filteredMeasures] = filterFoodKeys(res);\n          setIngredients(filteredIngredients);\n          setMeasures(filteredMeasures);\n          setDrink(res);\n          setIsFetching(false);\n        })\n        .catch((err) => console.log(err));\n\n      Meals.getMeals(limitToShow)\n        .then((res) => setMeals(res))\n        .catch((err) => console.log(err));\n    }\n  }, [page, id]);\n\n  if (isFetching) {\n    return <h1>Loading details...</h1>;\n  }\n\n  const commonProps = {\n    page,\n    favorite,\n    ingredients,\n    meals,\n    drinks,\n    measures,\n    inProgress,\n    id,\n  };\n\n  return (\n    <Recipe\n      recipe={ page === 'meal' ? meal : drink }\n      commonProps={ commonProps }\n    />\n  );\n};\n\nRecipeDetails.propTypes = { page: PropTypes.string.isRequired };\n\nexport default RecipeDetails;\n"]},"metadata":{},"sourceType":"module"}