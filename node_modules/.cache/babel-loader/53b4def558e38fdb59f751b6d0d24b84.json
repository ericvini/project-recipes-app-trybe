{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-recipes-app/src/components/SearchBarDrinks/SearchBarByDrinks.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cocktails from '../../services/cocktails-api';\n\nfunction SearchBarByDrinks(props) {\n  const {\n    searchValue\n  } = props;\n  const [drink, setDrink] = useState('');\n  const [radio, setRadio] = useState('');\n  const firstLetter = 'Primeira letra';\n  console.log(`byDrinks${searchValue}`);\n\n  function searchByDrinks(event) {\n    if (event.target.value === 'Ingredientes') {\n      setRadio('Ingredientes');\n    } else if (event.target.value === 'Nome') {\n      setRadio('Nome');\n    } else {\n      setRadio(firstLetter);\n    }\n  }\n\n  async function handlerClick() {\n    if (radio === 'Ingredientes') {\n      const response = await cocktails.searchCocktailsByIngredient(searchValue);\n      setDrink(response);\n    }\n\n    if (radio === 'Nome') {\n      const response = await cocktails.searchCocktailsByName(searchValue);\n      setDrink(response);\n    }\n\n    if (radio === firstLetter && searchValue.length === 1) {\n      const response = await cocktails.searchCocktailsByFirstLetter(searchValue);\n      setDrink(response);\n    }\n\n    if (radio === 'Primeira letra' && searchValue.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onChange: event => searchByDrinks(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"ingredient-search-radio\",\n    type: \"radio\",\n    value: \"Ingredientes\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), ' ', \"Ingredientes\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-search-radio\",\n    type: \"radio\",\n    value: \"Nome\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), ' ', \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"first-letter-search-radio\",\n    type: \"radio\",\n    value: \"Primeira letra\",\n    name: \"foods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), ' ', \"Primeira letra\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: handlerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Buscar\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, console.log(drink.drinks[0])));\n}\n\nSearchBarByDrinks.propTypes = {\n  searchValue: PropTypes.string.isRequired\n};\nexport default SearchBarByDrinks;","map":{"version":3,"sources":["/home/eric/sd-07-project-recipes-app/src/components/SearchBarDrinks/SearchBarByDrinks.jsx"],"names":["React","useState","PropTypes","cocktails","SearchBarByDrinks","props","searchValue","drink","setDrink","radio","setRadio","firstLetter","console","log","searchByDrinks","event","target","value","handlerClick","response","searchCocktailsByIngredient","searchCocktailsByName","length","searchCocktailsByFirstLetter","alert","drinks","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cocktails from '../../services/cocktails-api';\n\nfunction SearchBarByDrinks(props) {\n  const { searchValue } = props;\n  const [drink, setDrink] = useState('');\n  const [radio, setRadio] = useState('');\n  const firstLetter = 'Primeira letra';\n\n  console.log(`byDrinks${searchValue}`);\n  function searchByDrinks(event) {\n    if (event.target.value === 'Ingredientes') {\n      setRadio('Ingredientes');\n    } else if (event.target.value === 'Nome') {\n      setRadio('Nome');\n    } else {\n      setRadio(firstLetter);\n    }\n  }\n  async function handlerClick() {\n    if (radio === 'Ingredientes') {\n      const response = await cocktails.searchCocktailsByIngredient(searchValue);\n      setDrink(response);\n    }\n    if (radio === 'Nome') {\n      const response = await cocktails.searchCocktailsByName(searchValue);\n      setDrink(response);\n    }\n    if (radio === firstLetter && searchValue.length === 1) {\n      const response = await cocktails.searchCocktailsByFirstLetter(searchValue);\n      setDrink(response);\n    }\n    if (radio === 'Primeira letra' && searchValue.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }\n\n  return (\n    <div>\n      <div onChange={ (event) => searchByDrinks(event) }>\n        <input\n          data-testid=\"ingredient-search-radio\"\n          type=\"radio\"\n          value=\"Ingredientes\"\n          name=\"foods\"\n        />\n        {' '}\n        Ingredientes\n        <input\n          data-testid=\"name-search-radio\"\n          type=\"radio\"\n          value=\"Nome\"\n          name=\"foods\"\n        />\n        {' '}\n        Nome\n        <input\n          data-testid=\"first-letter-search-radio\"\n          type=\"radio\"\n          value=\"Primeira letra\"\n          name=\"foods\"\n        />\n        {' '}\n        Primeira letra\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ handlerClick }\n        >\n          Buscar\n        </button>\n      </div>\n      <div>\n        {console.log(drink.drinks[0])}\n      </div>\n    </div>\n\n  );\n}\nSearchBarByDrinks.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n};\nexport default SearchBarByDrinks;\n"]},"metadata":{},"sourceType":"module"}